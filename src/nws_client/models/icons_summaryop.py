"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .jsonldcontext_union import JSONLdContextUnion, JSONLdContextUnionTypedDict
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_client.types import BaseModel
import pydantic
from typing import Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class IconsTypedDict(TypedDict):
    description: str


class Icons(BaseModel):
    description: str


class IconsSummaryResponseBodyTypedDict(TypedDict):
    r"""success"""

    icons: Dict[str, IconsTypedDict]
    at_context: NotRequired[JSONLdContextUnionTypedDict]


class IconsSummaryResponseBody(BaseModel):
    r"""success"""

    icons: Dict[str, Icons]

    at_context: Annotated[
        Optional[JSONLdContextUnion], pydantic.Field(alias="@context")
    ] = None


IconsSummaryResponseResultTypedDict = TypeAliasType(
    "IconsSummaryResponseResultTypedDict",
    Union[IconsSummaryResponseBodyTypedDict, ProblemDetailTypedDict],
)


IconsSummaryResponseResult = TypeAliasType(
    "IconsSummaryResponseResult", Union[IconsSummaryResponseBody, ProblemDetail]
)


class IconsSummaryResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: IconsSummaryResponseResultTypedDict


class IconsSummaryResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: IconsSummaryResponseResult
