"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .observationstationcollectiongeojson import (
    ObservationStationCollectionGeoJSON,
    ObservationStationCollectionGeoJSONTypedDict,
)
from .observationstationcollectionjsonld import (
    ObservationStationCollectionJSONLd,
    ObservationStationCollectionJSONLdTypedDict,
)
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class ZoneStationsRequestTypedDict(TypedDict):
    zone_id: str
    r"""NWS public zone/county identifier"""
    limit: NotRequired[int]
    r"""Limit"""
    cursor: NotRequired[str]
    r"""Pagination cursor"""


class ZoneStationsRequest(BaseModel):
    zone_id: Annotated[
        str,
        pydantic.Field(alias="zoneId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""NWS public zone/county identifier"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 500
    r"""Limit"""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Pagination cursor"""


ZoneStationsResponseResultTypedDict = TypeAliasType(
    "ZoneStationsResponseResultTypedDict",
    Union[
        ObservationStationCollectionJSONLdTypedDict,
        ObservationStationCollectionGeoJSONTypedDict,
        ProblemDetailTypedDict,
    ],
)


ZoneStationsResponseResult = TypeAliasType(
    "ZoneStationsResponseResult",
    Union[
        ObservationStationCollectionJSONLd,
        ObservationStationCollectionGeoJSON,
        ProblemDetail,
    ],
)


class ZoneStationsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ZoneStationsResponseResultTypedDict


class ZoneStationsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ZoneStationsResponseResult
