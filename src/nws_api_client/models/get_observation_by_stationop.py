"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .observation import Observation, ObservationTypedDict
from .observationgeojson import ObservationGeoJSON, ObservationGeoJSONTypedDict
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from datetime import datetime
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetObservationByStationRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""
    time: datetime
    r"""Timestamp of requested observation"""


class GetObservationByStationRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""

    time: Annotated[
        datetime, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Timestamp of requested observation"""


GetObservationByStationResponseResultTypedDict = TypeAliasType(
    "GetObservationByStationResponseResultTypedDict",
    Union[
        ObservationGeoJSONTypedDict, ProblemDetailTypedDict, ObservationTypedDict, bytes
    ],
)


GetObservationByStationResponseResult = TypeAliasType(
    "GetObservationByStationResponseResult",
    Union[ObservationGeoJSON, ProblemDetail, Observation, bytes],
)


class GetObservationByStationResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetObservationByStationResponseResultTypedDict


class GetObservationByStationResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetObservationByStationResponseResult
