"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class RadarProfilerRequestTypedDict(TypedDict):
    station_id: str
    r"""Profiler station ID"""
    time: NotRequired[str]
    r"""Time interval"""
    interval: NotRequired[str]
    r"""Averaging interval"""


class RadarProfilerRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Profiler station ID"""

    time: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Time interval"""

    interval: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Averaging interval"""


RadarProfilerResponseResultTypedDict = TypeAliasType(
    "RadarProfilerResponseResultTypedDict", Union[ProblemDetailTypedDict, Any]
)


RadarProfilerResponseResult = TypeAliasType(
    "RadarProfilerResponseResult", Union[ProblemDetail, Any]
)


class RadarProfilerResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: RadarProfilerResponseResultTypedDict


class RadarProfilerResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: RadarProfilerResponseResult
