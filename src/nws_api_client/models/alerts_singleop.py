"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .alertgeojson import AlertGeoJSON, AlertGeoJSONTypedDict
from .alertjsonld import AlertJSONLd, AlertJSONLdTypedDict
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class AlertsSingleRequestTypedDict(TypedDict):
    id: str
    r"""Alert identifier"""


class AlertsSingleRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Alert identifier"""


AlertsSingleResponseResultTypedDict = TypeAliasType(
    "AlertsSingleResponseResultTypedDict",
    Union[AlertJSONLdTypedDict, AlertGeoJSONTypedDict, ProblemDetailTypedDict, bytes],
)


AlertsSingleResponseResult = TypeAliasType(
    "AlertsSingleResponseResult", Union[AlertJSONLd, AlertGeoJSON, ProblemDetail, bytes]
)


class AlertsSingleResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: AlertsSingleResponseResultTypedDict


class AlertsSingleResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: AlertsSingleResponseResult
