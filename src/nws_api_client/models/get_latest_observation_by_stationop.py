"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .observation import Observation, ObservationTypedDict
from .observationgeojson import ObservationGeoJSON, ObservationGeoJSONTypedDict
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetLatestObservationByStationRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""
    require_qc: NotRequired[bool]
    r"""Require QC"""


class GetLatestObservationByStationRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""

    require_qc: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Require QC"""


GetLatestObservationByStationResponseResultTypedDict = TypeAliasType(
    "GetLatestObservationByStationResponseResultTypedDict",
    Union[
        ObservationGeoJSONTypedDict, ProblemDetailTypedDict, ObservationTypedDict, bytes
    ],
)


GetLatestObservationByStationResponseResult = TypeAliasType(
    "GetLatestObservationByStationResponseResult",
    Union[ObservationGeoJSON, ProblemDetail, Observation, bytes],
)


class GetLatestObservationByStationResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetLatestObservationByStationResponseResultTypedDict


class GetLatestObservationByStationResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetLatestObservationByStationResponseResult
