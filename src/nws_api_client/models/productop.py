"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from .textproduct import TextProduct, TextProductTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class ProductRequestTypedDict(TypedDict):
    product_id: str
    r"""."""


class ProductRequest(BaseModel):
    product_id: Annotated[
        str,
        pydantic.Field(alias="productId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""."""


ProductResponseResultTypedDict = TypeAliasType(
    "ProductResponseResultTypedDict",
    Union[ProblemDetailTypedDict, TextProductTypedDict],
)


ProductResponseResult = TypeAliasType(
    "ProductResponseResult", Union[ProblemDetail, TextProduct]
)


class ProductResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ProductResponseResultTypedDict


class ProductResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ProductResponseResult
