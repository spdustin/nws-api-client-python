"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .centerweatheradvisorycollectiongeojson import (
    CenterWeatherAdvisoryCollectionGeoJSON,
    CenterWeatherAdvisoryCollectionGeoJSONTypedDict,
)
from .nwscenterweatherserviceunitid import NWSCenterWeatherServiceUnitID
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class CwasRequestTypedDict(TypedDict):
    cwsu_id: NWSCenterWeatherServiceUnitID
    r"""NWS CWSU ID"""


class CwasRequest(BaseModel):
    cwsu_id: Annotated[
        NWSCenterWeatherServiceUnitID,
        pydantic.Field(alias="cwsuId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""NWS CWSU ID"""


CwasResponseResultTypedDict = TypeAliasType(
    "CwasResponseResultTypedDict",
    Union[CenterWeatherAdvisoryCollectionGeoJSONTypedDict, ProblemDetailTypedDict],
)


CwasResponseResult = TypeAliasType(
    "CwasResponseResult", Union[CenterWeatherAdvisoryCollectionGeoJSON, ProblemDetail]
)


class CwasResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: CwasResponseResultTypedDict


class CwasResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: CwasResponseResult
