"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .observationstationgeojson import (
    ObservationStationGeoJSON,
    ObservationStationGeoJSONTypedDict,
)
from .observationstationjsonld import (
    ObservationStationJSONLd,
    ObservationStationJSONLdTypedDict,
)
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class ObsStationRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""


class ObsStationRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""


ObsStationResponseResultTypedDict = TypeAliasType(
    "ObsStationResponseResultTypedDict",
    Union[
        ObservationStationGeoJSONTypedDict,
        ProblemDetailTypedDict,
        ObservationStationJSONLdTypedDict,
    ],
)


ObsStationResponseResult = TypeAliasType(
    "ObsStationResponseResult",
    Union[ObservationStationGeoJSON, ProblemDetail, ObservationStationJSONLd],
)


class ObsStationResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ObsStationResponseResultTypedDict


class ObsStationResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ObsStationResponseResult
