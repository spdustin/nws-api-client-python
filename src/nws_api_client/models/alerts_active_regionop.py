"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .alertcollectiongeojson import (
    AlertCollectionGeoJSON,
    AlertCollectionGeoJSONTypedDict,
)
from .alertcollectionjsonld import AlertCollectionJSONLd, AlertCollectionJSONLdTypedDict
from .marineregioncode import MarineRegionCode
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class AlertsActiveRegionRequestTypedDict(TypedDict):
    region: MarineRegionCode
    r"""Marine region ID"""


class AlertsActiveRegionRequest(BaseModel):
    region: Annotated[
        MarineRegionCode,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Marine region ID"""


AlertsActiveRegionResponseResultTypedDict = TypeAliasType(
    "AlertsActiveRegionResponseResultTypedDict",
    Union[
        AlertCollectionJSONLdTypedDict,
        AlertCollectionGeoJSONTypedDict,
        ProblemDetailTypedDict,
        bytes,
    ],
)


AlertsActiveRegionResponseResult = TypeAliasType(
    "AlertsActiveRegionResponseResult",
    Union[AlertCollectionJSONLd, AlertCollectionGeoJSON, ProblemDetail, bytes],
)


class AlertsActiveRegionResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: AlertsActiveRegionResponseResultTypedDict


class AlertsActiveRegionResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: AlertsActiveRegionResponseResult
