"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class RadarServerRequestTypedDict(TypedDict):
    id: str
    r"""Server ID"""
    reporting_host: NotRequired[str]
    r"""Show records from specific reporting host"""


class RadarServerRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Server ID"""

    reporting_host: Annotated[
        Optional[str],
        pydantic.Field(alias="reportingHost"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Show records from specific reporting host"""


RadarServerResponseResultTypedDict = TypeAliasType(
    "RadarServerResponseResultTypedDict", Union[ProblemDetailTypedDict, Any]
)


RadarServerResponseResult = TypeAliasType(
    "RadarServerResponseResult", Union[ProblemDetail, Any]
)


class RadarServerResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: RadarServerResponseResultTypedDict


class RadarServerResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: RadarServerResponseResult
