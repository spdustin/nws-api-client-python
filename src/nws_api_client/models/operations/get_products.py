"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nws_api_client.models.components import (
    textproductcollection as components_textproductcollection,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, QueryParamMetadata
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetProductsRequestTypedDict(TypedDict):
    location: NotRequired[List[str]]
    r"""Location id"""
    start: NotRequired[str]
    r"""Start time"""
    end: NotRequired[str]
    r"""End time"""
    office: NotRequired[List[str]]
    r"""Issuing office"""
    wmoid: NotRequired[List[str]]
    r"""WMO id code"""
    type: NotRequired[List[str]]
    r"""Product code"""
    limit: NotRequired[int]
    r"""Limit"""


class GetProductsRequest(BaseModel):
    location: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Location id"""

    start: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Start time"""

    end: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""End time"""

    office: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Issuing office"""

    wmoid: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""WMO id code"""

    type: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Product code"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 500
    r"""Limit"""


class GetProductsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: components_textproductcollection.TextProductCollectionTypedDict


class GetProductsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: components_textproductcollection.TextProductCollection
