"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nws_api_client.models.components import (
    gridpoint as components_gridpoint,
    gridpointgeojson as components_gridpointgeojson,
    nwsforecastofficeid as components_nwsforecastofficeid,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetForecastRawRequestTypedDict(TypedDict):
    wfo: components_nwsforecastofficeid.NWSForecastOfficeID
    r"""Forecast office ID"""
    gridpoint: str
    r"""Forecast gridpoint pair(see https://weather-gov.github.io/api/gridpoints for more info)"""


class GetForecastRawRequest(BaseModel):
    wfo: Annotated[
        components_nwsforecastofficeid.NWSForecastOfficeID,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Forecast office ID"""

    gridpoint: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Forecast gridpoint pair(see https://weather-gov.github.io/api/gridpoints for more info)"""


GetForecastRawResponseResultTypedDict = TypeAliasType(
    "GetForecastRawResponseResultTypedDict",
    Union[
        components_gridpointgeojson.GridpointGeoJSONTypedDict,
        components_gridpoint.GridpointTypedDict,
    ],
)


GetForecastRawResponseResult = TypeAliasType(
    "GetForecastRawResponseResult",
    Union[components_gridpointgeojson.GridpointGeoJSON, components_gridpoint.Gridpoint],
)


class GetForecastRawResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetForecastRawResponseResultTypedDict


class GetForecastRawResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetForecastRawResponseResult
