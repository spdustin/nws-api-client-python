"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nws_api_client.models.components import (
    observationstationgeojson as components_observationstationgeojson,
    observationstationjsonld as components_observationstationjsonld,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetObservationStationInfoRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""


class GetObservationStationInfoRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""


GetObservationStationInfoResponseResultTypedDict = TypeAliasType(
    "GetObservationStationInfoResponseResultTypedDict",
    Union[
        components_observationstationgeojson.ObservationStationGeoJSONTypedDict,
        components_observationstationjsonld.ObservationStationJSONLdTypedDict,
    ],
)


GetObservationStationInfoResponseResult = TypeAliasType(
    "GetObservationStationInfoResponseResult",
    Union[
        components_observationstationgeojson.ObservationStationGeoJSON,
        components_observationstationjsonld.ObservationStationJSONLd,
    ],
)


class GetObservationStationInfoResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetObservationStationInfoResponseResultTypedDict


class GetObservationStationInfoResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetObservationStationInfoResponseResult
