"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nws_api_client.models.components import (
    areacode as components_areacode,
    observationstationcollectiongeojson as components_observationstationcollectiongeojson,
    observationstationcollectionjsonld as components_observationstationcollectionjsonld,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, QueryParamMetadata
from typing import Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetObservationStationsRequestTypedDict(TypedDict):
    id: NotRequired[List[str]]
    r"""Filter by observation station ID"""
    state: NotRequired[List[components_areacode.AreaCode]]
    r"""Filter by state/marine area code"""
    limit: NotRequired[int]
    r"""Limit"""
    cursor: NotRequired[str]
    r"""Pagination cursor"""


class GetObservationStationsRequest(BaseModel):
    id: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Filter by observation station ID"""

    state: Annotated[
        Optional[List[components_areacode.AreaCode]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Filter by state/marine area code"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 500
    r"""Limit"""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Pagination cursor"""


GetObservationStationsResponseResultTypedDict = TypeAliasType(
    "GetObservationStationsResponseResultTypedDict",
    Union[
        components_observationstationcollectionjsonld.ObservationStationCollectionJSONLdTypedDict,
        components_observationstationcollectiongeojson.ObservationStationCollectionGeoJSONTypedDict,
    ],
)


GetObservationStationsResponseResult = TypeAliasType(
    "GetObservationStationsResponseResult",
    Union[
        components_observationstationcollectionjsonld.ObservationStationCollectionJSONLd,
        components_observationstationcollectiongeojson.ObservationStationCollectionGeoJSON,
    ],
)


class GetObservationStationsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetObservationStationsResponseResultTypedDict


class GetObservationStationsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetObservationStationsResponseResult
