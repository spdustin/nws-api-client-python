"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import date
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List
from typing_extensions import Annotated, TypedDict


class GetTafRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""
    date_: date
    r"""Date (YYYY-MM-DD format)"""
    time: str
    r"""Time (HHMM format). This time is always specified in UTC (Zulu) time."""


class GetTafRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""

    date_: Annotated[
        date,
        pydantic.Field(alias="date"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Date (YYYY-MM-DD format)"""

    time: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Time (HHMM format). This time is always specified in UTC (Zulu) time."""


class GetTafResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: bytes


class GetTafResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: bytes
