"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nws_api_client.models.components import (
    observationcollectiongeojson as components_observationcollectiongeojson,
    observationcollectionjsonld as components_observationcollectionjsonld,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetObservationsRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""
    start: NotRequired[str]
    r"""Start time"""
    end: NotRequired[str]
    r"""End time"""
    limit: NotRequired[int]
    r"""Limit"""


class GetObservationsRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""

    start: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Start time"""

    end: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""End time"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 500
    r"""Limit"""


GetObservationsResponseResultTypedDict = TypeAliasType(
    "GetObservationsResponseResultTypedDict",
    Union[
        components_observationcollectionjsonld.ObservationCollectionJSONLdTypedDict,
        components_observationcollectiongeojson.ObservationCollectionGeoJSONTypedDict,
    ],
)


GetObservationsResponseResult = TypeAliasType(
    "GetObservationsResponseResult",
    Union[
        components_observationcollectionjsonld.ObservationCollectionJSONLd,
        components_observationcollectiongeojson.ObservationCollectionGeoJSON,
    ],
)


class GetObservationsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetObservationsResponseResultTypedDict


class GetObservationsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetObservationsResponseResult
