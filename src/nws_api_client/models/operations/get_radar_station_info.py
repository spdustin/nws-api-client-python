"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetRadarStationInfoRequestTypedDict(TypedDict):
    station_id: str
    r"""Radar station ID"""
    reporting_host: NotRequired[str]
    r"""Show RDA and latency info from specific reporting host"""
    host: NotRequired[str]
    r"""Show latency info from specific LDM host"""


class GetRadarStationInfoRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Radar station ID"""

    reporting_host: Annotated[
        Optional[str],
        pydantic.Field(alias="reportingHost"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Show RDA and latency info from specific reporting host"""

    host: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Show latency info from specific LDM host"""


GetRadarStationInfoResponseResultTypedDict = TypeAliasType(
    "GetRadarStationInfoResponseResultTypedDict", Union[Any, Any]
)


GetRadarStationInfoResponseResult = TypeAliasType(
    "GetRadarStationInfoResponseResult", Union[Any, Any]
)


class GetRadarStationInfoResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetRadarStationInfoResponseResultTypedDict


class GetRadarStationInfoResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetRadarStationInfoResponseResult
