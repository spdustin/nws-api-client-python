"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from .textproductlocationcollection import (
    TextProductLocationCollection,
    TextProductLocationCollectionTypedDict,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class ListLocationsByProductTypeRequestTypedDict(TypedDict):
    type_id: str
    r"""."""


class ListLocationsByProductTypeRequest(BaseModel):
    type_id: Annotated[
        str,
        pydantic.Field(alias="typeId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""."""


ListLocationsByProductTypeResponseResultTypedDict = TypeAliasType(
    "ListLocationsByProductTypeResponseResultTypedDict",
    Union[TextProductLocationCollectionTypedDict, ProblemDetailTypedDict],
)


ListLocationsByProductTypeResponseResult = TypeAliasType(
    "ListLocationsByProductTypeResponseResult",
    Union[TextProductLocationCollection, ProblemDetail],
)


class ListLocationsByProductTypeResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ListLocationsByProductTypeResponseResultTypedDict


class ListLocationsByProductTypeResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ListLocationsByProductTypeResponseResult
