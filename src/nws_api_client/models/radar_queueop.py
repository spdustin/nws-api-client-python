"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class RadarQueueRequestTypedDict(TypedDict):
    host: str
    r"""LDM host"""
    limit: NotRequired[int]
    r"""Record limit"""
    arrived: NotRequired[str]
    r"""Range for arrival time"""
    created: NotRequired[str]
    r"""Range for creation time"""
    published: NotRequired[str]
    r"""Range for publish time"""
    station: NotRequired[str]
    r"""Station identifier"""
    type: NotRequired[str]
    r"""Record type"""
    feed: NotRequired[str]
    r"""Originating product feed"""
    resolution: NotRequired[int]
    r"""Resolution version"""


class RadarQueueRequest(BaseModel):
    host: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""LDM host"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Record limit"""

    arrived: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Range for arrival time"""

    created: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Range for creation time"""

    published: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Range for publish time"""

    station: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Station identifier"""

    type: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Record type"""

    feed: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Originating product feed"""

    resolution: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Resolution version"""


RadarQueueResponseResultTypedDict = TypeAliasType(
    "RadarQueueResponseResultTypedDict", Union[ProblemDetailTypedDict, Any]
)


RadarQueueResponseResult = TypeAliasType(
    "RadarQueueResponseResult", Union[ProblemDetail, Any]
)


class RadarQueueResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: RadarQueueResponseResultTypedDict


class RadarQueueResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: RadarQueueResponseResult
