"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from .textproductcollection import TextProductCollection, TextProductCollectionTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class ProductsTypeRequestTypedDict(TypedDict):
    type_id: str
    r"""."""


class ProductsTypeRequest(BaseModel):
    type_id: Annotated[
        str,
        pydantic.Field(alias="typeId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""."""


ProductsTypeResponseResultTypedDict = TypeAliasType(
    "ProductsTypeResponseResultTypedDict",
    Union[TextProductCollectionTypedDict, ProblemDetailTypedDict],
)


ProductsTypeResponseResult = TypeAliasType(
    "ProductsTypeResponseResult", Union[TextProductCollection, ProblemDetail]
)


class ProductsTypeResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ProductsTypeResponseResultTypedDict


class ProductsTypeResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ProductsTypeResponseResult
