"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .pointgeojson import PointGeoJSON, PointGeoJSONTypedDict
from .pointjsonld import PointJSONLd, PointJSONLdTypedDict
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetPointMetadataRequestTypedDict(TypedDict):
    point: str
    r"""Point (latitude, longitude)"""


class GetPointMetadataRequest(BaseModel):
    point: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Point (latitude, longitude)"""


GetPointMetadataResponseResultTypedDict = TypeAliasType(
    "GetPointMetadataResponseResultTypedDict",
    Union[PointGeoJSONTypedDict, ProblemDetailTypedDict, PointJSONLdTypedDict],
)


GetPointMetadataResponseResult = TypeAliasType(
    "GetPointMetadataResponseResult", Union[PointGeoJSON, ProblemDetail, PointJSONLd]
)


class GetPointMetadataResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetPointMetadataResponseResultTypedDict


class GetPointMetadataResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetPointMetadataResponseResult
