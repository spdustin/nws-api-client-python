"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from .textproducttypecollection import (
    TextProductTypeCollection,
    TextProductTypeCollectionTypedDict,
)
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class LocationProductsRequestTypedDict(TypedDict):
    location_id: str
    r"""."""


class LocationProductsRequest(BaseModel):
    location_id: Annotated[
        str,
        pydantic.Field(alias="locationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""."""


LocationProductsResponseResultTypedDict = TypeAliasType(
    "LocationProductsResponseResultTypedDict",
    Union[TextProductTypeCollectionTypedDict, ProblemDetailTypedDict],
)


LocationProductsResponseResult = TypeAliasType(
    "LocationProductsResponseResult", Union[TextProductTypeCollection, ProblemDetail]
)


class LocationProductsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: LocationProductsResponseResultTypedDict


class LocationProductsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: LocationProductsResponseResult
