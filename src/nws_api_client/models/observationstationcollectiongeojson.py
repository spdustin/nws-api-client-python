"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .jsonldcontext_union import JSONLdContextUnion, JSONLdContextUnionTypedDict
from .observationstation import ObservationStation, ObservationStationTypedDict
from .paginationinfo import PaginationInfo, PaginationInfoTypedDict
from enum import Enum
from nws_api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ObservationStationCollectionGeoJSONFeatureTypedDict(TypedDict):
    properties: NotRequired[ObservationStationTypedDict]


class ObservationStationCollectionGeoJSONFeature(BaseModel):
    properties: Optional[ObservationStation] = None


class ObservationStationCollectionGeoJSONType(str, Enum):
    FEATURE_COLLECTION = "FeatureCollection"


class ObservationStationCollectionGeoJSONTypedDict(TypedDict):
    r"""A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."""

    features: List[ObservationStationCollectionGeoJSONFeatureTypedDict]
    type: ObservationStationCollectionGeoJSONType
    at_context: NotRequired[JSONLdContextUnionTypedDict]
    observation_stations: NotRequired[List[str]]
    pagination: NotRequired[PaginationInfoTypedDict]
    r"""Links for retrieving more data from paged data sets"""


class ObservationStationCollectionGeoJSON(BaseModel):
    r"""A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."""

    features: List[ObservationStationCollectionGeoJSONFeature]

    type: ObservationStationCollectionGeoJSONType

    at_context: Annotated[
        Optional[JSONLdContextUnion], pydantic.Field(alias="@context")
    ] = None

    observation_stations: Annotated[
        Optional[List[str]], pydantic.Field(alias="observationStations")
    ] = None

    pagination: Optional[PaginationInfo] = None
    r"""Links for retrieving more data from paged data sets"""
