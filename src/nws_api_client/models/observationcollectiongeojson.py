"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .jsonldcontext_union import JSONLdContextUnion, JSONLdContextUnionTypedDict
from .observation import Observation, ObservationTypedDict
from enum import Enum
from nws_api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ObservationCollectionGeoJSONType(str, Enum):
    FEATURE_COLLECTION = "FeatureCollection"


class ObservationCollectionGeoJSONFeatureTypedDict(TypedDict):
    properties: NotRequired[ObservationTypedDict]


class ObservationCollectionGeoJSONFeature(BaseModel):
    properties: Optional[Observation] = None


class ObservationCollectionGeoJSONTypedDict(TypedDict):
    r"""A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."""

    type: ObservationCollectionGeoJSONType
    features: List[ObservationCollectionGeoJSONFeatureTypedDict]
    at_context: NotRequired[JSONLdContextUnionTypedDict]


class ObservationCollectionGeoJSON(BaseModel):
    r"""A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."""

    type: ObservationCollectionGeoJSONType

    features: List[ObservationCollectionGeoJSONFeature]

    at_context: Annotated[
        Optional[JSONLdContextUnion], pydantic.Field(alias="@context")
    ] = None
