"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .jsonldcontext_union import JSONLdContextUnion, JSONLdContextUnionTypedDict
from .zone import Zone, ZoneTypedDict
from enum import Enum
from nws_api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ZoneCollectionGeoJSONFeatureTypedDict(TypedDict):
    properties: NotRequired[ZoneTypedDict]


class ZoneCollectionGeoJSONFeature(BaseModel):
    properties: Optional[Zone] = None


class ZoneCollectionGeoJSONType(str, Enum):
    FEATURE_COLLECTION = "FeatureCollection"


class ZoneCollectionGeoJSONTypedDict(TypedDict):
    r"""A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."""

    features: List[ZoneCollectionGeoJSONFeatureTypedDict]
    type: ZoneCollectionGeoJSONType
    at_context: NotRequired[JSONLdContextUnionTypedDict]


class ZoneCollectionGeoJSON(BaseModel):
    r"""A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."""

    features: List[ZoneCollectionGeoJSONFeature]

    type: ZoneCollectionGeoJSONType

    at_context: Annotated[
        Optional[JSONLdContextUnion], pydantic.Field(alias="@context")
    ] = None
