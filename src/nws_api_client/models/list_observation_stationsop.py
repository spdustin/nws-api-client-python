"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .areacode import AreaCode
from .observationstationcollectiongeojson import (
    ObservationStationCollectionGeoJSON,
    ObservationStationCollectionGeoJSONTypedDict,
)
from .observationstationcollectionjsonld import (
    ObservationStationCollectionJSONLd,
    ObservationStationCollectionJSONLdTypedDict,
)
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, QueryParamMetadata
from typing import Dict, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class ListObservationStationsRequestTypedDict(TypedDict):
    id: NotRequired[List[str]]
    r"""Filter by observation station ID"""
    state: NotRequired[List[AreaCode]]
    r"""Filter by state/marine area code"""
    limit: NotRequired[int]
    r"""Limit"""
    cursor: NotRequired[str]
    r"""Pagination cursor"""


class ListObservationStationsRequest(BaseModel):
    id: Annotated[
        Optional[List[str]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Filter by observation station ID"""

    state: Annotated[
        Optional[List[AreaCode]],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None
    r"""Filter by state/marine area code"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 500
    r"""Limit"""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Pagination cursor"""


ListObservationStationsResponseResultTypedDict = TypeAliasType(
    "ListObservationStationsResponseResultTypedDict",
    Union[
        ObservationStationCollectionJSONLdTypedDict,
        ObservationStationCollectionGeoJSONTypedDict,
        ProblemDetailTypedDict,
    ],
)


ListObservationStationsResponseResult = TypeAliasType(
    "ListObservationStationsResponseResult",
    Union[
        ObservationStationCollectionJSONLd,
        ObservationStationCollectionGeoJSON,
        ProblemDetail,
    ],
)


class ListObservationStationsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ListObservationStationsResponseResultTypedDict


class ListObservationStationsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ListObservationStationsResponseResult
