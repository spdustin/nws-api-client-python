"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Any, Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class TafsRequestTypedDict(TypedDict):
    station_id: str
    r"""Observation station ID"""


class TafsRequest(BaseModel):
    station_id: Annotated[
        str,
        pydantic.Field(alias="stationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Observation station ID"""


TafsResponseResultTypedDict = TypeAliasType(
    "TafsResponseResultTypedDict", Union[ProblemDetailTypedDict, Any]
)


TafsResponseResult = TypeAliasType("TafsResponseResult", Union[ProblemDetail, Any])


class TafsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: TafsResponseResultTypedDict


class TafsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: TafsResponseResult
