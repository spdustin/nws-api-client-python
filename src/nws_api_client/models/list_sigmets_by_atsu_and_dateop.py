"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from .sigmetcollectiongeojson import (
    SigmetCollectionGeoJSON,
    SigmetCollectionGeoJSONTypedDict,
)
from datetime import date
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class ListSigmetsByAtsuAndDateRequestTypedDict(TypedDict):
    atsu: str
    r"""ATSU identifier"""
    date_: date
    r"""Date (YYYY-MM-DD format)"""


class ListSigmetsByAtsuAndDateRequest(BaseModel):
    atsu: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""ATSU identifier"""

    date_: Annotated[
        date,
        pydantic.Field(alias="date"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Date (YYYY-MM-DD format)"""


ListSigmetsByAtsuAndDateResponseResultTypedDict = TypeAliasType(
    "ListSigmetsByAtsuAndDateResponseResultTypedDict",
    Union[SigmetCollectionGeoJSONTypedDict, ProblemDetailTypedDict],
)


ListSigmetsByAtsuAndDateResponseResult = TypeAliasType(
    "ListSigmetsByAtsuAndDateResponseResult",
    Union[SigmetCollectionGeoJSON, ProblemDetail],
)


class ListSigmetsByAtsuAndDateResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ListSigmetsByAtsuAndDateResponseResultTypedDict


class ListSigmetsByAtsuAndDateResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ListSigmetsByAtsuAndDateResponseResult
