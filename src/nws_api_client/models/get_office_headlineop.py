"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .nwsofficeid import NWSOfficeID
from .officeheadline import OfficeHeadline, OfficeHeadlineTypedDict
from .problemdetail import ProblemDetail, ProblemDetailTypedDict
from nws_api_client.types import BaseModel
from nws_api_client.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class GetOfficeHeadlineRequestTypedDict(TypedDict):
    office_id: NWSOfficeID
    r"""NWS office ID"""
    headline_id: str
    r"""Headline record ID"""


class GetOfficeHeadlineRequest(BaseModel):
    office_id: Annotated[
        NWSOfficeID,
        pydantic.Field(alias="officeId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""NWS office ID"""

    headline_id: Annotated[
        str,
        pydantic.Field(alias="headlineId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Headline record ID"""


GetOfficeHeadlineResponseResultTypedDict = TypeAliasType(
    "GetOfficeHeadlineResponseResultTypedDict",
    Union[ProblemDetailTypedDict, OfficeHeadlineTypedDict],
)


GetOfficeHeadlineResponseResult = TypeAliasType(
    "GetOfficeHeadlineResponseResult", Union[ProblemDetail, OfficeHeadline]
)


class GetOfficeHeadlineResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GetOfficeHeadlineResponseResultTypedDict


class GetOfficeHeadlineResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: GetOfficeHeadlineResponseResult
