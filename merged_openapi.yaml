openapi: 3.1.0
info:
  title: MODIFIED National Weather Service weather.gov API
  description: OpenAPI Client SDK for National Weather Service API (NWS / weather.gov)
  version: 3.1.0
  contact:
    name: Dustin Miller
    url: https://github.com/spdustin/nws-api-client-python
servers:
  - url: https://api.weather.gov
    description: Production server
x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 500
    maxInterval: 60000
    maxElapsedTime: 3600000
    exponent: 1.5
  statusCodes:
    - 5XX
  retryConnectionErrors: true
x-speakeasy-globals:
  parameters:
    - $ref: "#/components/parameters/NWSOfficeId"
tags:
  - name: Alerts
    description: Operations related to alerts, advisories, SIGMETS, etc.
  - name: Aviation
    description: Operations related to aviation weather
  - name: Conditions
    description: Operations related to current conditions
  - name: Forecasts
    description: Operations related to forecasts
  - name: Geographic
    description: Operations that return data specific to NWS zones, counties, states, NWS grid points, or latitude/longitude coordinates
  - name: Metadata
    description: Operations that return metadata about an NWS resource/entity
  - name: Products
    description: Operations related to NWS text products
  - name: Radar
    description: Operations related to radar stations
paths:
  /alerts/active:
    get:
      summary: Returns filtered (or all) currently active alerts
      operationId: get_active_alerts
      tags:
        - Alerts
        - Geographic
      parameters:
        - $ref: "#/components/parameters/AlertStatus"
        - $ref: "#/components/parameters/AlertMessageType"
        - $ref: "#/components/parameters/AlertEventName"
        - $ref: "#/components/parameters/AlertCode"
        - $ref: "#/components/parameters/AlertArea"
        - $ref: "#/components/parameters/AlertPoint"
        - $ref: "#/components/parameters/AlertRegion"
        - $ref: "#/components/parameters/AlertRegionType"
        - $ref: "#/components/parameters/AlertZone"
        - $ref: "#/components/parameters/AlertUrgency"
        - $ref: "#/components/parameters/AlertSeverity"
        - $ref: "#/components/parameters/AlertCertainty"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          $ref: "#/components/responses/AlertCollection"
        "301":
          $ref: "#/components/responses/Redirect"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getActive
  /alerts/active/count:
    get:
      summary: Returns info on the number of active alerts
      operationId: get_active_alerts_count
      tags:
        - Alerts
      responses:
        "200":
          $ref: "#/components/responses/AlertsActiveCount"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getActiveCount
  "/alerts/active/zone/{zoneId}":
    parameters:
      - $ref: "#/components/parameters/NWSZoneId"
    get:
      summary: Returns active alerts for the given NWS public zone/county identifier
      operationId: get_active_alerts_by_zone
      tags:
        - Alerts
        - Geographic
      responses:
        "200":
          $ref: "#/components/responses/AlertCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getActiveForZone
  "/alerts/active/area/{area}":
    parameters:
      - name: area
        in: path
        description: State or Marine Area ID
        required: true
        schema:
          $ref: "#/components/schemas/AreaCode"
    get:
      summary: Returns active alerts for the given state or marine area
      operationId: get_active_alerts_by_area
      tags:
        - Alerts
        - Geographic
      responses:
        "200":
          $ref: "#/components/responses/AlertCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listActiveForArea
  "/alerts/active/region/{region}":
    parameters:
      - name: region
        in: path
        description: Marine region ID
        required: true
        schema:
          $ref: "#/components/schemas/MarineRegionCode"
    get:
      summary: Returns active alerts for the given marine region
      operationId: get_active_alerts_by_marine_region
      tags:
        - Alerts
        - Geographic
      responses:
        "200":
          $ref: "#/components/responses/AlertCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getActiveByRegion
  /alerts/types:
    get:
      summary: Returns a list of alert types
      operationId: get_alert_types
      tags:
        - Alerts
      responses:
        "200":
          $ref: "#/components/responses/AlertsTypes"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listTypes
  "/alerts/{id}":
    parameters:
      - name: id
        in: path
        description: Alert identifier
        required: true
        schema:
          $ref: "#/components/schemas/AlertId"
    get:
      summary: Returns a specific alert
      operationId: get_alert
      tags:
        - Alerts
      responses:
        "200":
          description: An alert record
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/AlertGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/AlertJsonLd"
          x-url-content-negotiation-extensions:
            json: application/geo+json
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: get
  "/aviation/cwsus/{cwsuId}":
    parameters:
      - $ref: "#/components/parameters/NWSCenterWeatherServiceUnitId"
    get:
      summary: Returns metadata about a Center Weather Service Unit
      operationId: get_cwsu
      tags:
        - Geographic
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/CenterWeatherServiceUnitJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getCwsu
  "/aviation/cwsus/{cwsuId}/cwas":
    parameters:
      - $ref: "#/components/parameters/NWSCenterWeatherServiceUnitId"
    get:
      summary: Returns a list of Center Weather Advisories from a CWSU
      operationId: get_cwas_by_cwsu
      tags:
        - Alerts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/CenterWeatherAdvisoryCollectionGeoJson"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getCenterWeatherAdvisories
  "/aviation/cwsus/{cwsuId}/cwas/{date}/{sequence}":
    parameters:
      - $ref: "#/components/parameters/NWSCenterWeatherServiceUnitId"
      - $ref: "#/components/parameters/Date"
      - name: sequence
        in: path
        description: Sequence number
        required: true
        schema:
          minimum: 100
          type: integer
    get:
      summary: Returns a list of CWAs from a CWSU for a specific date and sequence
      operationId: get_cwas_by_cwsu_for_date_and_sequence
      tags:
        - Alerts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/CenterWeatherAdvisoryGeoJson"
            application/vnd.noaa.uswx+xml:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getAviationCwa
  /aviation/sigmets:
    get:
      summary: Returns a list of SIGMET/AIRMETs
      operationId: get_sigmets
      tags:
        - Alerts
        - Aviation
      parameters:
        - $ref: "#/components/parameters/QueryStartTime"
        - $ref: "#/components/parameters/QueryEndTime"
        - $ref: "#/components/parameters/QueryDate"
        - name: atsu
          in: query
          description: ATSU identifier
          schema:
            $ref: "#/components/schemas/ATSUIdentifier"
        - name: sequence
          in: query
          description: SIGMET sequence number
          schema:
            $ref: "#/components/schemas/SigmetSequenceNumber"
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/SigmetCollectionGeoJson"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listSigmets
  "/aviation/sigmets/{atsu}":
    parameters:
      - $ref: "#/components/parameters/ATSUIdentifier"
    get:
      summary: Returns a list of SIGMET/AIRMETs for the specified ATSU
      operationId: get_sigmets_by_atsu
      tags:
        - Alerts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/SigmetCollectionGeoJson"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getSigmetsByAtsu
  "/aviation/sigmets/{atsu}/{date}":
    parameters:
      - $ref: "#/components/parameters/ATSUIdentifier"
      - $ref: "#/components/parameters/Date"
    get:
      summary: Returns a list of SIGMET/AIRMETs for the specified ATSU for the specified date
      operationId: get_sigmets_by_atsu_for_date
      tags:
        - Alerts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/SigmetCollectionGeoJson"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getAviationSigmetsByAtsuForDate
  "/aviation/sigmets/{atsu}/{date}/{time}":
    parameters:
      - $ref: "#/components/parameters/ATSUIdentifier"
      - $ref: "#/components/parameters/Date"
      - $ref: "#/components/parameters/Time"
    get:
      summary: Returns a specific SIGMET/AIRMET
      operationId: get_sigmet
      tags:
        - Alerts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/SigmetGeoJson"
            application/vnd.noaa.uswx+xml:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getAviationSigmet
  /glossary:
    get:
      summary: List glossary terms
      operationId: get_glossary_terms
      tags:
        - Products
      responses:
        "200":
          $ref: "#/components/responses/Glossary"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listGlossaryTerms
  "/gridpoints/{wfo}/{gridpoint}":
    parameters:
      - $ref: "#/components/parameters/GridpointWFO"
      - $ref: "#/components/parameters/Gridpoint"
    get:
      summary: Returns raw numerical forecast data for a 2.5km grid area
      operationId: get_forecast_raw
      tags:
        - Forecasts
        - Geographic
      responses:
        "200":
          description: Gridpoint forecast data
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/GridpointGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/GridpointJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getRaw
  "/gridpoints/{wfo}/{gridpoint}/forecast":
    parameters:
      - $ref: "#/components/parameters/GridpointWFO"
      - $ref: "#/components/parameters/Gridpoint"
    get:
      summary: Returns a textual forecast for a 2.5km grid area
      operationId: get_forecast
      tags:
        - Forecasts
        - Geographic
      parameters:
        - $ref: "#/components/parameters/GridpointForecastFeatureFlags"
        - $ref: "#/components/parameters/GridpointForecastUnits"
      responses:
        "200":
          $ref: "#/components/responses/GridpointForecast"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: get
  "/gridpoints/{wfo}/{gridpoint}/forecast/hourly":
    parameters:
      - $ref: "#/components/parameters/GridpointWFO"
      - $ref: "#/components/parameters/Gridpoint"
    get:
      summary: Returns a textual hourly forecast for a 2.5km grid area
      operationId: get_hourly_forecast
      tags:
        - Forecasts
        - Geographic
      parameters:
        - $ref: "#/components/parameters/GridpointForecastFeatureFlags"
        - $ref: "#/components/parameters/GridpointForecastUnits"
      responses:
        "200":
          $ref: "#/components/responses/GridpointForecast"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getHourly
  "/gridpoints/{wfo}/{gridpoint}/stations":
    parameters:
      - $ref: "#/components/parameters/GridpointWFO"
      - $ref: "#/components/parameters/Gridpoint"
    get:
      summary: Returns a list of observation stations usable for a given 2.5km grid area
      operationId: get_gridpoint_observation_stations
      tags:
        - Geographic
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/PaginationCursor"
      responses:
        "200":
          $ref: "#/components/responses/ObservationStationCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listGridpointStations
  "/stations/{stationId}/observations":
    parameters:
      - $ref: "#/components/parameters/ObservationStationId"
    get:
      summary: Returns a list of observations for a given station
      operationId: get_observations
      tags:
        - Conditions
        - Geographic
      parameters:
        - $ref: "#/components/parameters/QueryStartTime"
        - $ref: "#/components/parameters/QueryEndTime"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          $ref: "#/components/responses/ObservationCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-group: stations
      x-speakeasy-name-override: getObservations
  "/stations/{stationId}/observations/latest":
    parameters:
      - $ref: "#/components/parameters/ObservationStationId"
    get:
      summary: Returns the latest observation for a station
      operationId: get_latest_observation
      tags:
        - Conditions
        - Geographic
      parameters:
        - name: require_qc
          in: query
          description: Require QC
          schema:
            type: boolean
      responses:
        "200":
          $ref: "#/components/responses/Observation"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getLatestObservation
  "/stations/{stationId}/observations/{timestamp}":
    parameters:
      - $ref: "#/components/parameters/ObservationStationId"
      - name: timestamp
        in: path
        description: Timestamp of requested observation (YYYY-MM-DDThh:mm:ssZ or YYYY-MM-DDThh:mm:ss+hh:mm)
        required: true
        schema:
          type: string
          format: date-time
    get:
      summary: Returns a single observation
      operationId: get_observation
      tags:
        - Conditions
        - Geographic
      responses:
        "200":
          $ref: "#/components/responses/Observation"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getObservation
  "/stations/{stationId}/tafs":
    parameters:
      - $ref: "#/components/parameters/ObservationStationId"
    get:
      summary: Returns Terminal Aerodrome Forecasts for the specified airport station.
      operationId: get_tafs
      tags:
        - Forecasts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getTafs
  "/stations/{stationId}/tafs/{date}/{time}":
    parameters:
      - $ref: "#/components/parameters/ObservationStationId"
      - $ref: "#/components/parameters/Date"
      - $ref: "#/components/parameters/Time"
    get:
      summary: Returns a single Terminal Aerodrome Forecast
      operationId: get_taf
      tags:
        - Forecasts
        - Aviation
      responses:
        "200":
          description: success
          content:
            application/vnd.wmo.iwxxm+xml:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getTaf
  /stations:
    get:
      summary: Returns a list of observation stations.
      operationId: get_observation_stations
      tags:
        - Metadata
        - Geographic
      parameters:
        - $ref: "#/components/parameters/QueryIdArray"
        - $ref: "#/components/parameters/QueryStateArray"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/PaginationCursor"
      responses:
        "200":
          $ref: "#/components/responses/ObservationStationCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listObservationStations
  "/stations/{stationId}":
    parameters:
      - $ref: "#/components/parameters/ObservationStationId"
    get:
      summary: Returns metadata about a given observation station
      operationId: get_observation_station_info
      tags:
        - Metadata
        - Geographic
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ObservationStationGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ObservationStationJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-group: stations
      x-speakeasy-name-override: getStation
  "/offices/{officeId}":
    parameters:
      - $ref: "#/components/parameters/NWSOfficeId"
    get:
      summary: Returns metadata about a NWS forecast office
      operationId: get_office_info
      tags:
        - Metadata
        - Geographic
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Office"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getOffice
  "/offices/{officeId}/headlines/{headlineId}":
    parameters:
      - $ref: "#/components/parameters/NWSOfficeId"
      - name: headlineId
        in: path
        description: Headline record ID
        required: true
        schema:
          type: string
    get:
      summary: Returns a specific news headline for a given NWS office
      operationId: get_office_headline
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/OfficeHeadline"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getOfficeHeadline
  "/offices/{officeId}/headlines":
    parameters:
      - $ref: "#/components/parameters/NWSOfficeId"
    get:
      summary: Returns a list of news headlines for a given NWS office
      operationId: get_office_headlines
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/OfficeHeadlineCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listOfficeHeadlines
  "/points/{point}":
    parameters:
      - $ref: "#/components/parameters/PathPoint"
    get:
      summary: Returns metadata (inc. forecast gridpoint) about a given lat,long pair
      operationId: get_lat_long_info
      tags:
        - Metadata
        - Geographic
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/PointGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/PointJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getPointInfo
  /radar/servers:
    get:
      summary: Returns a list of radar servers
      operationId: get_radar_servers
      tags:
        - Radar
        - Metadata
      parameters:
        - name: reportingHost
          in: query
          description: Show records from specific reporting host
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listServers
  "/radar/servers/{id}":
    parameters:
      - name: id
        in: path
        description: Server ID
        required: true
        schema:
          type: string
    get:
      summary: Returns metadata about a given radar server
      operationId: get_radar_server
      tags:
        - Radar
        - Metadata
      parameters:
        - name: reportingHost
          in: query
          description: Show records from specific reporting host
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getServer
  /radar/stations:
    get:
      summary: Returns a list of radar stations
      operationId: get_radar_stations
      tags:
        - Radar
        - Metadata
      parameters:
        - $ref: "#/components/parameters/QueryStationTypeArray"
        - $ref: "#/components/parameters/QueryReportingHost"
        - $ref: "#/components/parameters/QueryHost"
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema: {}
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listStations
  "/radar/stations/{stationId}":
    parameters:
      - name: stationId
        in: path
        description: Radar station ID
        required: true
        schema:
          type: string
    get:
      summary: Returns metadata about a given radar station
      operationId: get_radar_station_info
      tags:
        - Radar
        - Metadata
      parameters:
        - name: reportingHost
          in: query
          description: Show RDA and latency info from specific reporting host
          schema:
            type: string
        - name: host
          in: query
          description: Show latency info from specific LDM host
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema: {}
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getRadarStation
  "/radar/stations/{stationId}/alarms":
    parameters:
      - name: stationId
        in: path
        description: Radar station ID
        required: true
        schema:
          type: string
    get:
      summary: Returns metadata about a given radar station alarms
      operationId: get_radar_station_alarms
      tags:
        - Radar
        - Metadata
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getStationAlarms
  "/radar/queues/{host}":
    parameters:
      - name: host
        in: path
        description: LDM host
        required: true
        schema:
          type: string
    get:
      summary: Returns metadata about a given radar queue
      operationId: get_radar_station_queue
      tags:
        - Radar
        - Metadata
      parameters:
        - $ref: "#/components/parameters/Limit"
        - name: arrived
          in: query
          description: Range for arrival time
          schema:
            $ref: "#/components/schemas/ISO8601Interval"
        - name: created
          in: query
          description: Range for creation time
          schema:
            $ref: "#/components/schemas/ISO8601Interval"
        - name: published
          in: query
          description: Range for publish time
          schema:
            $ref: "#/components/schemas/ISO8601Interval"
        - name: station
          in: query
          description: Station identifier
          schema:
            type: string
        - name: type
          in: query
          description: Record type
          schema:
            type: string
        - name: feed
          in: query
          description: Originating product feed
          schema:
            type: string
        - name: resolution
          in: query
          description: Resolution version
          schema:
            minimum: 1
            type: integer
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getQueue
  "/radar/profilers/{stationId}":
    parameters:
      - name: stationId
        in: path
        description: Profiler station ID
        required: true
        schema:
          type: string
    get:
      summary: Returns metadata about a given radar wind profiler
      operationId: get_radar_profiler_info
      tags:
        - Radar
        - Metadata
      parameters:
        - name: time
          in: query
          description: Time interval
          schema:
            $ref: "#/components/schemas/ISO8601Interval"
        - name: interval
          in: query
          description: Averaging interval
          schema:
            $ref: "#/components/schemas/ISO8601Duration"
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema: {}
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getProfiler
  /products:
    get:
      summary: Returns a list of text products
      operationId: get_products
      tags:
        - Products
      parameters:
        - name: location
          in: query
          description: Location id
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - $ref: "#/components/parameters/QueryStartTime"
        - $ref: "#/components/parameters/QueryEndTime"
        - name: office
          in: query
          description: Issuing office
          style: form
          explode: false
          schema:
            type: array
            items:
              pattern: ^[A-Z]{4}$
              type: string
        - name: wmoid
          in: query
          description: WMO id code
          style: form
          explode: false
          schema:
            type: array
            items:
              pattern: ^[A-Z]{4}\d{2}$
              type: string
        - name: type
          in: query
          description: Product code
          style: form
          explode: false
          schema:
            type: array
            items:
              pattern: ^\w{3}$
              type: string
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listProducts
  /products/locations:
    get:
      summary: Returns a list of valid text product issuance locations
      operationId: get_product_locations
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductLocationCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listIssuingLocations
  /products/types:
    get:
      summary: Returns a list of valid text product types and codes
      operationId: get_product_types
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductTypeCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listTypes
  "/products/{productId}":
    parameters:
      - name: productId
        in: path
        description: .
        required: true
        schema:
          type: string
    get:
      summary: Returns a specific text product
      operationId: get_product
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProduct"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: get
  "/products/types/{typeId}":
    parameters:
      - name: typeId
        in: path
        description: .
        required: true
        schema:
          type: string
    get:
      summary: Returns a list of text products of a given type
      operationId: get_products_by_type
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listByType
  "/products/types/{typeId}/locations":
    parameters:
      - name: typeId
        in: path
        description: .
        required: true
        schema:
          type: string
    get:
      summary: Returns a list of valid text product issuance locations for a given product type
      operationId: get_locations_by_product_type
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductLocationCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listLocationsByType
  "/products/locations/{locationId}/types":
    parameters:
      - name: locationId
        in: path
        description: .
        required: true
        schema:
          type: string
    get:
      summary: Returns a list of valid text product types for a given issuance location
      operationId: get_product_types_by_location
      tags:
        - Products
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductTypeCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listTypesByLocation
  "/products/types/{typeId}/locations/{locationId}":
    parameters:
      - name: typeId
        in: path
        description: .
        required: true
        schema:
          type: string
          example: AFD
      - name: locationId
        in: path
        description: .
        required: true
        schema:
          type: string
          example: LOT
    get:
      summary: Returns a list of text products of a given type for a given issuance location
      operationId: get_products_by_type_and_location
      tags:
        - Products
      x-speakeasy-usage-example:
        title: Text Products
        description: Get your local NWS office's Area Forecast Discussion
      x-speakeasy-name-override: getAvailable
      responses:
        "200":
          description: success
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/TextProductCollection"
        "400":
          $ref: "#/components/responses/ClientError"
  /zones:
    get:
      summary: Returns a list of zones
      operationId: get_zones
      tags:
        - Geographic
      parameters:
        - name: id
          in: query
          description: Zone ID (forecast or county)
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/NWSZoneID"
        - name: area
          in: query
          description: State/marine area code
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AreaCode"
        - name: region
          in: query
          description: Region code
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/RegionCode"
        - name: type
          in: query
          description: Zone type
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/NWSZoneType"
        - name: point
          in: query
          description: Point (latitude,longitude)
          schema:
            $ref: "#/components/schemas/PointString"
        - name: include_geometry
          in: query
          description: Include geometry in results (true/false)
          schema:
            type: boolean
        - $ref: "#/components/parameters/LimitFull"
        - name: effective
          in: query
          description: Effective date/time
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ZoneCollectionGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ZoneCollectionJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listZones
  "/zones/{type}":
    parameters:
      - name: type
        in: path
        description: Zone type
        required: true
        schema:
          $ref: "#/components/schemas/NWSZoneType"
    get:
      summary: Returns a list of zones of a given type
      operationId: get_zones_by_type
      tags:
        - Geographic
      parameters:
        - name: id
          in: query
          description: Zone ID (forecast or county)
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/NWSZoneID"
        - name: area
          in: query
          description: State/marine area code
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AreaCode"
        - name: region
          in: query
          description: Region code
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/RegionCode"
        - name: type
          in: query
          description: Zone type
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/NWSZoneType"
        - name: point
          in: query
          description: Point (latitude,longitude)
          schema:
            $ref: "#/components/schemas/PointString"
        - name: include_geometry
          in: query
          description: Include geometry in results (true/false)
          schema:
            type: boolean
        - $ref: "#/components/parameters/LimitFull"
        - name: effective
          in: query
          description: Effective date/time
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ZoneCollectionGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ZoneCollectionJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getZonesByType
  "/zones/{type}/{zoneId}":
    parameters:
      - name: type
        in: path
        description: Zone type
        required: true
        schema:
          $ref: "#/components/schemas/NWSZoneType"
      - $ref: "#/components/parameters/NWSZoneId"
    get:
      summary: Returns metadata about a given zone
      operationId: get_zone_info
      tags:
        - Metadata
        - Geographic
      parameters:
        - name: effective
          in: query
          description: Effective date/time
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ZoneGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ZoneJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getZone
  "/zones/{type}/{zoneId}/forecast":
    parameters:
      - name: type
        in: path
        description: Zone type
        required: true
        schema:
          type: string
      - $ref: "#/components/parameters/NWSZoneId"
    get:
      summary: Returns the current zone forecast for a given zone
      operationId: get_zone_forecast
      tags:
        - Forecasts
        - Geographic
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ZoneForecastGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ZoneForecastJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getZoneForecast
  "/zones/forecast/{zoneId}/observations":
    parameters:
      - $ref: "#/components/parameters/NWSZoneId"
    get:
      summary: Returns a list of observations for a given zone
      operationId: get_zone_observations
      tags:
        - Conditions
        - Geographic
      parameters:
        - $ref: "#/components/parameters/QueryStartTime"
        - $ref: "#/components/parameters/QueryEndTime"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: success
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ObservationCollectionGeoJson"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ObservationCollectionJsonLd"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: listZoneObservations
  "/zones/forecast/{zoneId}/stations":
    parameters:
      - $ref: "#/components/parameters/NWSZoneId"
    get:
      summary: Returns a list of observation stations for a given zone
      operationId: get_zone_stations
      tags:
        - Metadata
        - Geographic
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/PaginationCursor"
      responses:
        "200":
          $ref: "#/components/responses/ObservationStationCollection"
        "400":
          $ref: "#/components/responses/ClientError"
      x-speakeasy-name-override: getZoneStations
components:
  schemas:
    AlertsActiveCount:
      type: object
      properties:
        total:
          minimum: 0
          type: integer
          description: The total number of active alerts
        land:
          minimum: 0
          type: integer
          description: The total number of active alerts affecting land zones
        marine:
          minimum: 0
          type: integer
          description: The total number of active alerts affecting marine zones
        regions:
          type: object
          description: Active alerts by marine region
          additionalProperties:
            minimum: 1
            type: integer
        areas:
          type: object
          description: Active alerts by area (state/territory)
          additionalProperties:
            minimum: 1
            type: integer
        zones:
          type: object
          description: Active alerts by NWS public zone or county code
          additionalProperties:
            minimum: 1
            type: integer
    AlertsTypes:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            type: string
          description: A list of recognized event types
    Glossary:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        glossary:
          type: array
          items:
            $ref: "#/components/schemas/GlossaryTerm"
          description: A list of glossary terms
    GlossaryTerm:
      type: object
      properties:
        term:
          type: string
          description: The term being defined
        definition:
          type: string
          description: A definition for the term
    Alert:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/AlertId"
        areaDesc:
          type: string
          description: A textual description of the area affected by the alert.
        geocode:
          type: object
          properties:
            UGC:
              type: array
              items:
                $ref: "#/components/schemas/NWSZoneID"
              description: A list of NWS public zone or county identifiers.
            SAME:
              type: array
              items:
                pattern: ^\d{6}$
                type: string
              description: A list of SAME (Specific Area Message Encoding) codes for affected counties.
          description: Lists of codes for NWS public zones and counties affected by the alert.
        affectedZones:
          type: array
          items:
            type: string
            format: uri
          description: An array of API links for zones affected by the alert. This is an API-specific extension field and is not part of the CAP specification.
        references:
          type: array
          items:
            type: object
            properties:
              "@id":
                type: string
                description: An API link to the prior alert.
                format: uri
              identifier:
                $ref: "#/components/schemas/AlertId"
              sender:
                type: string
                description: The sender of the prior alert.
              sent:
                type: string
                description: The time the prior alert was sent.
                format: date-time
          description: A list of prior alerts that this alert updates or replaces.
        sent:
          type: string
          description: The time of the origination of the alert message.
          format: date-time
        effective:
          type: string
          description: The effective time of the information of the alert message.
          format: date-time
        onset:
          type: string
          nullable: true
          description: The expected time of the beginning of the subject event of the alert message.
          format: date-time
        expires:
          type: string
          description: The expiry time of the information of the alert message.
          format: date-time
        ends:
          type: string
          nullable: true
          description: The expected end time of the subject event of the alert message.
          format: date-time
        status:
          $ref: "#/components/schemas/AlertStatus"
        messageType:
          $ref: "#/components/schemas/AlertMessageType"
        category:
          enum:
            - Met
            - Geo
            - Safety
            - Security
            - Rescue
            - Fire
            - Health
            - Env
            - Transport
            - Infra
            - CBRNE
            - Other
          type: string
          description: The code denoting the category of the subject event of the alert message.
        severity:
          $ref: "#/components/schemas/AlertSeverity"
        certainty:
          $ref: "#/components/schemas/AlertCertainty"
        urgency:
          $ref: "#/components/schemas/AlertUrgency"
        event:
          type: string
          description: The text denoting the type of the subject event of the alert message.
        sender:
          type: string
          description: Email address of the NWS webmaster.
        senderName:
          type: string
          description: The text naming the originator of the alert message.
        headline:
          type: string
          nullable: true
          description: The text headline of the alert message.
        description:
          type: string
          description: The text describing the subject event of the alert message.
        instruction:
          type: string
          nullable: true
          description: The text describing the recommended action to be taken by recipients of the alert message.
        response:
          enum:
            - Shelter
            - Evacuate
            - Prepare
            - Execute
            - Avoid
            - Monitor
            - Assess
            - AllClear
            - None
          type: string
          description: The code denoting the type of action recommended for the target audience. This corresponds to responseType in the CAP specification.
        parameters:
          type: object
          description: System-specific additional parameters associated with the alert message. The keys in this object correspond to parameter definitions in the NWS CAP specification.
          additionalProperties:
            type: array
            items: {}
      description: An object representing a public alert message. Unless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2 specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more complete information. http://docs.oasis-open.org/emergency/cap/v1.2/CAP-v1.2-os.html http://docs.oasis-open.org/emergency/cap/v1.2/ipaws-profile/v1.0/cs01/cap-v1.2-ipaws-profile-cs01.html https://alerts.weather.gov/#technical-notes-v12
    AlertCollection:
      type: object
      properties:
        title:
          type: string
          description: A title describing the alert collection
        updated:
          type: string
          description: The last time a change occurred to this collection
          format: date-time
        pagination:
          $ref: "#/components/schemas/PaginationInfo"
    AlertCollectionGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                type: object
                properties:
                  properties:
                    $ref: "#/components/schemas/Alert"
        - $ref: "#/components/schemas/AlertCollection"
    AlertCollectionJsonLd:
      allOf:
        - $ref: "#/components/schemas/AlertCollection"
        - type: object
          properties:
            "@context":
              $ref: "#/components/schemas/JsonLdContext"
            "@graph":
              type: array
              items:
                $ref: "#/components/schemas/Alert"
    AlertGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/Alert"
    AlertJsonLd:
      type: object
      properties:
        "@graph":
          type: array
          items:
            $ref: "#/components/schemas/Alert"
    AlertId:
      type: string
      description: The identifier of the alert message.
      example: "urn:oid:2.49.0.1.840.0.404b3149af6da23b497bb9705fadc6ead564a967.005.1"
    AlertCertainty:
      enum:
        - Observed
        - Likely
        - Possible
        - Unlikely
        - Unknown
      type: string
    AlertMessageType:
      enum:
        - Alert
        - Update
        - Cancel
        - Ack
        - Error
      type: string
    AlertSeverity:
      enum:
        - Extreme
        - Severe
        - Moderate
        - Minor
        - Unknown
      type: string
    AlertStatus:
      enum:
        - Actual
        - Exercise
        - System
        - Test
        - Draft
      type: string
    AlertUrgency:
      enum:
        - Immediate
        - Expected
        - Future
        - Past
        - Unknown
      type: string
    AreaCode:
      type: string
      enum:
        - AL
        - AK
        - AS
        - AR
        - AZ
        - CA
        - CO
        - CT
        - DE
        - DC
        - FL
        - GA
        - GU
        - HI
        - ID
        - IL
        - IN
        - IA
        - KS
        - KY
        - LA
        - ME
        - MD
        - MA
        - MI
        - MN
        - MS
        - MO
        - MT
        - NE
        - NV
        - NH
        - NJ
        - NM
        - NY
        - NC
        - ND
        - OH
        - OK
        - OR
        - PA
        - PR
        - RI
        - SC
        - SD
        - TN
        - TX
        - UT
        - VT
        - VI
        - VA
        - WA
        - WV
        - WI
        - WY
        - MP
        - PW
        - FM
        - MH
        - AM
        - AN
        - GM
        - LC
        - LE
        - LH
        - LM
        - LO
        - LS
        - PH
        - PK
        - PM
        - PS
        - PZ
        - SL
      description: State/territory codes and marine area codes
    ATSUIdentifier:
      pattern: ^[A-Z]{3,4}$
      type: string
      description: ATSU Identifier
      example: KKCI
    CenterWeatherAdvisoryCollectionGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                type: object
                properties:
                  properties:
                    $ref: "#/components/schemas/CenterWeatherAdvisory"
    CenterWeatherAdvisoryGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/CenterWeatherAdvisory"
    CenterWeatherAdvisory:
      type: object
      properties:
        id:
          type: string
        issueTime:
          type: string
          format: date-time
        cwsu:
          $ref: "#/components/schemas/NWSCenterWeatherServiceUnitId"
        sequence:
          minimum: 101
          type: integer
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        observedProperty:
          type: string
        text:
          type: string
      additionalProperties: false
    CenterWeatherServiceUnitJsonLd:
      $ref: "#/components/schemas/Office"
    Date:
      type: string
      description: Date (in YYYY-MM-DD format).
      format: date
      example: "2025-02-23"
    GeometryString:
      type: string
      nullable: true
      description: A geometry represented in Well-Known Text (WKT) format.
      format: wkt
    GeoJsonBoundingBox:
      minItems: 4
      type: array
      items:
        type: number
      description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information on the GeoJSON format.
    GeoJsonCoordinate:
      minItems: 2
      type: array
      items:
        type: number
      description: A GeoJSON coordinate. Please refer to IETF RFC 7946 for information on the GeoJSON format.
    GeoJsonGeometry:
      oneOf:
        - title: GeoJSON Point
          required:
            - type
            - coordinates
          type: object
          properties:
            type:
              enum:
                - Point
              type: string
            coordinates:
              $ref: "#/components/schemas/GeoJsonCoordinate"
            bbox:
              $ref: "#/components/schemas/GeoJsonBoundingBox"
        - title: GeoJSON LineString
          required:
            - type
            - coordinates
          type: object
          properties:
            type:
              enum:
                - LineString
              type: string
            coordinates:
              $ref: "#/components/schemas/GeoJsonLineString"
            bbox:
              $ref: "#/components/schemas/GeoJsonBoundingBox"
        - title: GeoJSON Polygon
          required:
            - type
            - coordinates
          type: object
          properties:
            type:
              enum:
                - Polygon
              type: string
            coordinates:
              $ref: "#/components/schemas/GeoJsonPolygon"
            bbox:
              $ref: "#/components/schemas/GeoJsonBoundingBox"
        - title: GeoJSON MultiPoint
          required:
            - type
            - coordinates
          type: object
          properties:
            type:
              enum:
                - MultiPoint
              type: string
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/GeoJsonCoordinate"
            bbox:
              $ref: "#/components/schemas/GeoJsonBoundingBox"
        - title: GeoJSON MultiLineString
          required:
            - type
            - coordinates
          type: object
          properties:
            type:
              enum:
                - MultiLineString
              type: string
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/GeoJsonLineString"
            bbox:
              $ref: "#/components/schemas/GeoJsonBoundingBox"
        - title: GeoJSON MultiPolygon
          required:
            - type
            - coordinates
          type: object
          properties:
            type:
              enum:
                - MultiPolygon
              type: string
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/GeoJsonPolygon"
            bbox:
              $ref: "#/components/schemas/GeoJsonBoundingBox"
      description: A GeoJSON geometry object. Please refer to IETF RFC 7946 for information on the GeoJSON format.
      type: object
      nullable: true
    GeoJsonFeature:
      required:
        - type
        - geometry
        - properties
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        id:
          type: string
          format: uri
        type:
          enum:
            - Feature
          type: string
        geometry:
          $ref: "#/components/schemas/GeoJsonGeometry"
        properties:
          type: object
      description: A GeoJSON feature. Please refer to IETF RFC 7946 for information on the GeoJSON format.
      additionalProperties: false
    GeoJsonFeatureCollection:
      required:
        - type
        - features
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        type:
          enum:
            - FeatureCollection
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/GeoJsonFeature"
      description: A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format.
    GeoJsonLineString:
      minItems: 2
      type: array
      items:
        $ref: "#/components/schemas/GeoJsonCoordinate"
      description: A GeoJSON line string. Please refer to IETF RFC 7946 for information on the GeoJSON format.
    GeoJsonPolygon:
      type: array
      items:
        minItems: 4
        type: array
        items:
          $ref: "#/components/schemas/GeoJsonCoordinate"
      description: A GeoJSON polygon. Please refer to IETF RFC 7946 for information on the GeoJSON format.
    Gridpoint:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        "@id":
          type: string
          format: uri
        "@type":
          enum:
            - wx:Gridpoint
          type: string
        updateTime:
          type: string
          format: date-time
        validTimes:
          $ref: "#/components/schemas/ISO8601Interval"
        elevation:
          $ref: "#/components/schemas/QuantitativeValue"
        forecastOffice:
          type: string
          format: uri
        gridId:
          type: string
        gridX:
          minimum: 0
          type: integer
        gridY:
          minimum: 0
          type: integer
        weather:
          required:
            - values
          type: object
          properties:
            values:
              type: array
              items:
                required:
                  - validTime
                  - value
                type: object
                properties:
                  validTime:
                    $ref: "#/components/schemas/ISO8601Interval"
                  value:
                    type: array
                    items:
                      required:
                        - coverage
                        - weather
                        - intensity
                        - visibility
                        - attributes
                      type: object
                      properties:
                        coverage:
                          enum:
                            - areas
                            - brief
                            - chance
                            - definite
                            - few
                            - frequent
                            - intermittent
                            - isolated
                            - likely
                            - numerous
                            - occasional
                            - patchy
                            - periods
                            - scattered
                            - slight_chance
                            - widespread
                            - null
                          type: string
                          nullable: true
                        weather:
                          enum:
                            - blowing_dust
                            - blowing_sand
                            - blowing_snow
                            - drizzle
                            - fog
                            - freezing_fog
                            - freezing_drizzle
                            - freezing_rain
                            - freezing_spray
                            - frost
                            - hail
                            - haze
                            - ice_crystals
                            - ice_fog
                            - rain
                            - rain_showers
                            - sleet
                            - smoke
                            - snow
                            - snow_showers
                            - thunderstorms
                            - volcanic_ash
                            - water_spouts
                            - null
                          type: string
                          nullable: true
                        intensity:
                          enum:
                            - very_light
                            - light
                            - moderate
                            - heavy
                            - null
                          type: string
                          nullable: true
                        visibility:
                          $ref: "#/components/schemas/QuantitativeValue"
                        attributes:
                          type: array
                          items:
                            enum:
                              - damaging_wind
                              - dry_thunderstorms
                              - flooding
                              - gusty_wind
                              - heavy_rain
                              - large_hail
                              - small_hail
                              - tornadoes
                            type: string
                      description: A value object representing expected weather phenomena.
                      additionalProperties: false
                additionalProperties: false
        hazards:
          required:
            - values
          type: object
          properties:
            values:
              type: array
              items:
                required:
                  - validTime
                  - value
                type: object
                properties:
                  validTime:
                    $ref: "#/components/schemas/ISO8601Interval"
                  value:
                    type: array
                    items:
                      required:
                        - phenomenon
                        - significance
                        - event_number
                      type: object
                      properties:
                        phenomenon:
                          pattern: ^\w{2}$
                          type: string
                          description: Hazard code. This value will correspond to a P-VTEC phenomenon code as defined in NWS Directive 10-1703.
                        significance:
                          pattern: ^\w$
                          type: string
                          description: Significance code. This value will correspond to a P-VTEC significance code as defined in NWS Directive 10-1703. This will most frequently be "A" for a watch or "Y" for an advisory.
                        event_number:
                          type: integer
                          nullable: true
                          description: Event number. If this hazard refers to a national or regional center product (such as a Storm Prediction Center convective watch), this value will be the sequence number of that product.
                      description: A value object representing an expected hazard.
                additionalProperties: false
      description: |
        Raw forecast data for a 2.5km grid square. This is a list of all potential data layers that may appear. Some layers may not be present in all areas. * temperature * dewpoint * maxTemperature * minTemperature * relativeHumidity * apparentTemperature * heatIndex * windChill * wetBulbGlobeTemperature * skyCover * windDirection * windSpeed * windGust * weather * hazards: Watch and advisory products in effect * probabilityOfPrecipitation * quantitativePrecipitation * iceAccumulation * snowfallAmount * snowLevel * ceilingHeight * visibility * transportWindSpeed * transportWindDirection * mixingHeight * hainesIndex * lightningActivityLevel * twentyFootWindSpeed * twentyFootWindDirection * waveHeight * wavePeriod * waveDirection * primarySwellHeight * primarySwellDirection * secondarySwellHeight * secondarySwellDirection * wavePeriod2 * windWaveHeight * dispersionIndex * pressure: Barometric pressure * probabilityOfTropicalStormWinds * probabilityOfHurricaneWinds * potentialOf15mphWinds * potentialOf25mphWinds * potentialOf35mphWinds * potentialOf45mphWinds * potentialOf20mphWindGusts * potentialOf30mphWindGusts * potentialOf40mphWindGusts * potentialOf50mphWindGusts * potentialOf60mphWindGusts * grasslandFireDangerIndex * probabilityOfThunder * davisStabilityIndex * atmosphericDispersionIndex * lowVisibilityOccurrenceRiskIndex * stability * redFlagThreatIndex
      additionalProperties:
        $ref: "#/components/schemas/GridpointQuantitativeValueLayer"
    GridpointQuantitativeValueLayer:
      required:
        - values
      type: object
      properties:
        uom:
          $ref: "#/components/schemas/UnitOfMeasure"
        values:
          type: array
          items:
            required:
              - validTime
              - value
            type: object
            properties:
              validTime:
                $ref: "#/components/schemas/ISO8601Interval"
              value:
                type: number
                nullable: true
            additionalProperties: false
      description: A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).
    GridpointGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/Gridpoint"
    GridpointJsonLd:
      $ref: "#/components/schemas/Gridpoint"
    GridpointForecast:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        units:
          $ref: "#/components/schemas/GridpointForecastUnits"
        forecastGenerator:
          type: string
          description: The internal generator class used to create the forecast text (used for NWS debugging).
        generatedAt:
          type: string
          description: The time this forecast data was generated.
          format: date-time
        updateTime:
          type: string
          description: The last update time of the data this forecast was generated from.
          format: date-time
        validTimes:
          $ref: "#/components/schemas/ISO8601Interval"
        elevation:
          $ref: "#/components/schemas/QuantitativeValue"
        periods:
          type: array
          items:
            $ref: "#/components/schemas/GridpointForecastPeriod"
          description: An array of forecast periods.
      description: A multi-day forecast for a 2.5km grid square.
      additionalProperties: false
    GridpointForecastPeriod:
      type: object
      properties:
        number:
          minimum: 1
          type: integer
          description: Sequential period number.
        name:
          type: string
          description: A textual identifier for the period. This value will not be present for hourly forecasts.
          example: Tuesday Night
        startTime:
          type: string
          description: The starting time that this forecast period is valid for.
          format: date-time
        endTime:
          type: string
          description: The ending time that this forecast period is valid for.
          format: date-time
        isDaytime:
          type: boolean
          description: Indicates whether this period is daytime or nighttime.
        temperature:
          oneOf:
            - $ref: "#/components/schemas/QuantitativeValue"
            - type: integer
          description: High/low temperature for the period, depending on whether the period is day or night. This property as an integer value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the "forecast_temperature_qv" feature flag on the request.
        temperatureUnit:
          enum:
            - F
            - C
          type: string
          description: The unit of the temperature value (Fahrenheit or Celsius). This property is deprecated. Future versions will indicate the unit within the quantitative value object for the temperature property. To make use of the future standard format now, set the "forecast_temperature_qv" feature flag on the request.
          deprecated: true
        temperatureTrend:
          enum:
            - rising
            - falling
            - null
          type: string
          nullable: true
          description: If not null, indicates a non-diurnal temperature trend for the period (either rising temperature overnight, or falling temperature during the day)
        probabilityOfPrecipitation:
          $ref: "#/components/schemas/QuantitativeValue"
        dewpoint:
          $ref: "#/components/schemas/QuantitativeValue"
        relativeHumidity:
          $ref: "#/components/schemas/QuantitativeValue"
        windSpeed:
          oneOf:
            - $ref: "#/components/schemas/QuantitativeValue"
            - type: string
          description: Wind speed for the period. This property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the "forecast_wind_speed_qv" feature flag on the request.
        windGust:
          oneOf:
            - $ref: "#/components/schemas/QuantitativeValue"
              nullable: true
            - type: string
              nullable: true
          description: Peak wind gust for the period. This property as a string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the "forecast_wind_speed_qv" feature flag on the request.
        windDirection:
          enum:
            - N
            - NNE
            - NE
            - ENE
            - E
            - ESE
            - SE
            - SSE
            - S
            - SSW
            - SW
            - WSW
            - W
            - WNW
            - NW
            - NNW
          type: string
          description: The prevailing direction of the wind for the period, using a 16-point compass.
        icon:
          type: string
          description: A link to an icon representing the forecast summary.
          format: uri
          deprecated: true
        shortForecast:
          type: string
          description: A brief textual forecast summary for the period.
        detailedForecast:
          type: string
          description: A detailed textual forecast for the period.
      description: An object containing forecast information for a specific time period (generally 12-hour or 1-hour).
      additionalProperties: false
    GridpointForecastUnits:
      enum:
        - us
        - si
      type: string
      description: Denotes the units used in the textual portions of the forecast.
      default: us
    GridpointForecastGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/GridpointForecast"
    GridpointForecastJsonLd:
      allOf:
        - $ref: "#/components/schemas/GridpointForecast"
        - required:
            - "@context"
            - geometry
          type: object
          properties:
            "@context":
              $ref: "#/components/schemas/JsonLdContext"
            geometry:
              $ref: "#/components/schemas/GeometryString"
    ISO8601Duration:
      pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?$
      type: string
      description: A time duration in ISO 8601 format.
      example: P2DT12H
    ISO8601Interval:
      oneOf:
        - pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)\/(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)$
          type: string
          example: 2007-03-01T13:00:00Z/2008-05-11T15:30:00Z
        - pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)\/P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?$
          type: string
          example: 2007-03-01T13:00:00Z/P1Y2M10DT2H30M
        - pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?\/(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)$
          type: string
          example: P1Y2M10DT2H30M/2008-05-11T15:30:00Z
      description: |
        A time interval in ISO 8601 format. This can be one of:
            1. Start and end time
            2. Start time and duration
            3. Duration and end time
        The string "NOW" can also be used in place of a start/end time.
    JsonLdContext:
      anyOf:
        - type: array
          items: {}
        - type: object
    LandRegionCode:
      enum:
        - AR
        - CR
        - ER
        - PR
        - SR
        - WR
      type: string
      description: |
        Land region code. These correspond to the six NWS regional headquarters:
        * AR: Alaska Region
        * CR: Central Region
        * ER: Eastern Region
        * PR: Pacific Region
        * SR: Southern Region
        * WR: Western Region
    MarineRegionCode:
      enum:
        - AL
        - AT
        - GL
        - GM
        - PA
        - PI
      type: string
      description: |
        Marine region code. These are groups of marine areas combined.
        * AL: Alaska waters (PK)
        * AT: Atlantic Ocean (AM, AN)
        * GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)
        * GM: Gulf of Mexico (GM)
        * PA: Eastern Pacific Ocean and U.S. West Coast (PZ)
        * PI: Central and Western Pacific (PH, PM, PS)
      example: GL
    MetarPhenomenon:
      required:
        - intensity
        - modifier
        - weather
        - rawString
      type: object
      properties:
        intensity:
          enum:
            - light
            - heavy
            - null
          type: string
          nullable: true
        modifier:
          enum:
            - patches
            - blowing
            - low_drifting
            - freezing
            - shallow
            - partial
            - showers
            - null
          type: string
          nullable: true
        weather:
          enum:
            - fog_mist
            - dust_storm
            - dust
            - drizzle
            - funnel_cloud
            - fog
            - smoke
            - hail
            - snow_pellets
            - haze
            - ice_crystals
            - ice_pellets
            - dust_whirls
            - spray
            - rain
            - sand
            - snow_grains
            - snow
            - squalls
            - sand_storm
            - thunderstorms
            - unknown
            - volcanic_ash
          type: string
        rawString:
          type: string
        inVicinity:
          type: boolean
      description: An object representing a decoded METAR phenomenon string.
      additionalProperties: false
    MetarSkyCoverage:
      enum:
        - OVC
        - BKN
        - SCT
        - FEW
        - SKC
        - CLR
        - VV
      type: string
    NWSCenterWeatherServiceUnitId:
      enum:
        - ZAB
        - ZAN
        - ZAU
        - ZBW
        - ZDC
        - ZDV
        - ZFA
        - ZFW
        - ZHU
        - ZID
        - ZJX
        - ZKC
        - ZLA
        - ZLC
        - ZMA
        - ZME
        - ZMP
        - ZNY
        - ZOA
        - ZOB
        - ZSE
        - ZTL
      type: string
      description: Three-letter identifier for a Center Weather Service Unit (CWSU).
    NWSForecastOfficeId:
      enum:
        - AKQ
        - ALY
        - BGM
        - BOX
        - BTV
        - BUF
        - CAE
        - CAR
        - CHS
        - CLE
        - CTP
        - GSP
        - GYX
        - ILM
        - ILN
        - LWX
        - MHX
        - OKX
        - PBZ
        - PHI
        - RAH
        - RLX
        - RNK
        - ABQ
        - AMA
        - BMX
        - BRO
        - CRP
        - EPZ
        - EWX
        - FFC
        - FWD
        - HGX
        - HUN
        - JAN
        - JAX
        - KEY
        - LCH
        - LIX
        - LUB
        - LZK
        - MAF
        - MEG
        - MFL
        - MLB
        - MOB
        - MRX
        - OHX
        - OUN
        - SHV
        - SJT
        - SJU
        - TAE
        - TBW
        - TSA
        - ABR
        - APX
        - ARX
        - BIS
        - BOU
        - CYS
        - DDC
        - DLH
        - DMX
        - DTX
        - DVN
        - EAX
        - FGF
        - FSD
        - GID
        - GJT
        - GLD
        - GRB
        - GRR
        - ICT
        - ILX
        - IND
        - IWX
        - JKL
        - LBF
        - LMK
        - LOT
        - LSX
        - MKX
        - MPX
        - MQT
        - OAX
        - PAH
        - PUB
        - RIW
        - SGF
        - TOP
        - UNR
        - BOI
        - BYZ
        - EKA
        - FGZ
        - GGW
        - HNX
        - LKN
        - LOX
        - MFR
        - MSO
        - MTR
        - OTX
        - PDT
        - PIH
        - PQR
        - PSR
        - REV
        - SEW
        - SGX
        - SLC
        - STO
        - TFX
        - TWC
        - VEF
        - AER
        - AFC
        - AFG
        - AJK
        - ALU
        - GUM
        - HPA
        - HFO
        - PPG
        - STU
        - NH1
        - NH2
        - ONA
        - ONP
      type: string
      description: Three-letter identifier for a NWS office.
      example: LOT
    NWSOfficeId:
      type: string
      enum:
        - ARH
        - CRH
        - ERH
        - PRH
        - SRH
        - WRH
        - NWS
        - AKQ
        - ALY
        - BGM
        - BOX
        - BTV
        - BUF
        - CAE
        - CAR
        - CHS
        - CLE
        - CTP
        - GSP
        - GYX
        - ILM
        - ILN
        - LWX
        - MHX
        - OKX
        - PBZ
        - PHI
        - RAH
        - RLX
        - RNK
        - ABQ
        - AMA
        - BMX
        - BRO
        - CRP
        - EPZ
        - EWX
        - FFC
        - FWD
        - HGX
        - HUN
        - JAN
        - JAX
        - KEY
        - LCH
        - LIX
        - LUB
        - LZK
        - MAF
        - MEG
        - MFL
        - MLB
        - MOB
        - MRX
        - OHX
        - OUN
        - SHV
        - SJT
        - SJU
        - TAE
        - TBW
        - TSA
        - ABR
        - APX
        - ARX
        - BIS
        - BOU
        - CYS
        - DDC
        - DLH
        - DMX
        - DTX
        - DVN
        - EAX
        - FGF
        - FSD
        - GID
        - GJT
        - GLD
        - GRB
        - GRR
        - ICT
        - ILX
        - IND
        - IWX
        - JKL
        - LBF
        - LMK
        - LOT
        - LSX
        - MKX
        - MPX
        - MQT
        - OAX
        - PAH
        - PUB
        - RIW
        - SGF
        - TOP
        - UNR
        - BOI
        - BYZ
        - EKA
        - FGZ
        - GGW
        - HNX
        - LKN
        - LOX
        - MFR
        - MSO
        - MTR
        - OTX
        - PDT
        - PIH
        - PQR
        - PSR
        - REV
        - SEW
        - SGX
        - SLC
        - STO
        - TFX
        - TWC
        - VEF
        - AER
        - AFC
        - AFG
        - AJK
        - ALU
        - GUM
        - HPA
        - HFO
        - PPG
        - STU
        - NH1
        - NH2
        - ONA
        - ONP
    NWSZoneID:
      pattern: ^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\d{3}$
      type: string
      description: "A UGC identifier for a NWS forecast zone or county. The first two letters will correspond to either a state code or marine area code (see #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid letter combinations). The third letter will be Z for public/fire zone or C for county."
    NWSZoneType:
      enum:
        - land
        - marine
        - forecast
        - public
        - coastal
        - offshore
        - fire
        - county
      type: string
      description: The NWS zone type
      example: county
    Observation:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        "@id":
          type: string
          format: uri
        "@type":
          enum:
            - wx:ObservationStation
          type: string
        elevation:
          $ref: "#/components/schemas/QuantitativeValue"
        station:
          type: string
          format: uri
        timestamp:
          type: string
          format: date-time
        rawMessage:
          type: string
        textDescription:
          type: string
        icon:
          type: string
          nullable: true
          format: uri
          deprecated: true
        presentWeather:
          type: array
          items:
            $ref: "#/components/schemas/MetarPhenomenon"
        temperature:
          $ref: "#/components/schemas/QuantitativeValue"
        dewpoint:
          $ref: "#/components/schemas/QuantitativeValue"
        windDirection:
          $ref: "#/components/schemas/QuantitativeValue"
        windSpeed:
          $ref: "#/components/schemas/QuantitativeValue"
        windGust:
          $ref: "#/components/schemas/QuantitativeValue"
        barometricPressure:
          $ref: "#/components/schemas/QuantitativeValue"
        seaLevelPressure:
          $ref: "#/components/schemas/QuantitativeValue"
        visibility:
          $ref: "#/components/schemas/QuantitativeValue"
        maxTemperatureLast24Hours:
          $ref: "#/components/schemas/QuantitativeValue"
        minTemperatureLast24Hours:
          $ref: "#/components/schemas/QuantitativeValue"
        precipitationLastHour:
          $ref: "#/components/schemas/QuantitativeValue"
        precipitationLast3Hours:
          $ref: "#/components/schemas/QuantitativeValue"
        precipitationLast6Hours:
          $ref: "#/components/schemas/QuantitativeValue"
        relativeHumidity:
          $ref: "#/components/schemas/QuantitativeValue"
        windChill:
          $ref: "#/components/schemas/QuantitativeValue"
        heatIndex:
          $ref: "#/components/schemas/QuantitativeValue"
        cloudLayers:
          type: array
          nullable: true
          items:
            required:
              - base
              - amount
            type: object
            properties:
              base:
                $ref: "#/components/schemas/QuantitativeValue"
              amount:
                $ref: "#/components/schemas/MetarSkyCoverage"
            additionalProperties: false
      additionalProperties: false
    ObservationGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/Observation"
    ObservationJsonLd:
      $ref: "#/components/schemas/Observation"
    ObservationCollectionGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                type: object
                properties:
                  properties:
                    $ref: "#/components/schemas/Observation"
    ObservationCollectionJsonLd:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@graph":
          type: array
          items:
            $ref: "#/components/schemas/Observation"
      additionalProperties: false
    ObservationStation:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        "@id":
          type: string
          format: uri
        "@type":
          enum:
            - wx:ObservationStation
          type: string
        elevation:
          $ref: "#/components/schemas/QuantitativeValue"
        stationIdentifier:
          type: string
        name:
          type: string
        timeZone:
          type: string
          format: iana-time-zone-identifier
        forecast:
          type: string
          description: A link to the NWS public forecast zone containing this station.
          format: uri
        county:
          type: string
          description: A link to the NWS county zone containing this station.
          format: uri
        fireWeatherZone:
          type: string
          description: A link to the NWS fire weather forecast zone containing this station.
          format: uri
      additionalProperties: false
    ObservationStationGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/ObservationStation"
    ObservationStationJsonLd:
      allOf:
        - $ref: "#/components/schemas/ObservationStation"
        - required:
            - "@context"
            - geometry
          type: object
          properties:
            "@context":
              $ref: "#/components/schemas/JsonLdContext"
            geometry:
              $ref: "#/components/schemas/GeometryString"
    ObservationStationCollectionGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                type: object
                properties:
                  properties:
                    $ref: "#/components/schemas/ObservationStation"
            observationStations:
              type: array
              items:
                type: string
                format: uri
            pagination:
              $ref: "#/components/schemas/PaginationInfo"
    ObservationStationCollectionJsonLd:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@graph":
          type: array
          items:
            $ref: "#/components/schemas/ObservationStation"
        observationStations:
          type: array
          items:
            type: string
            format: uri
        pagination:
          $ref: "#/components/schemas/PaginationInfo"
      additionalProperties: false
    Office:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@type":
          enum:
            - GovernmentOrganization
          type: string
        "@id":
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        address:
          type: object
          properties:
            "@type":
              enum:
                - PostalAddress
              type: string
            streetAddress:
              type: string
            addressLocality:
              type: string
            addressRegion:
              type: string
            postalCode:
              type: string
          additionalProperties: false
        telephone:
          type: string
        faxNumber:
          type: string
        email:
          type: string
        sameAs:
          type: string
          format: uri
        nwsRegion:
          type: string
        parentOrganization:
          type: string
          format: uri
        responsibleCounties:
          type: array
          items:
            type: string
            format: uri
        responsibleForecastZones:
          type: array
          items:
            type: string
            format: uri
        responsibleFireZones:
          type: array
          items:
            type: string
            format: uri
        approvedObservationStations:
          type: array
          items:
            type: string
            format: uri
      additionalProperties: false
    OfficeHeadline:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@id":
          type: string
          format: uri
        id:
          type: string
        office:
          type: string
          format: uri
        important:
          type: boolean
        issuanceTime:
          type: string
          format: date-time
        link:
          type: string
          format: uri
        name:
          type: string
        title:
          type: string
        summary:
          type: string
          nullable: true
        content:
          type: string
    OfficeHeadlineCollection:
      required:
        - "@context"
        - "@graph"
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@graph":
          type: array
          items:
            $ref: "#/components/schemas/OfficeHeadline"
      additionalProperties: false
    PaginationInfo:
      required:
        - next
      type: object
      properties:
        next:
          type: string
          description: A link to the next page of records
          format: uri
      description: Links for retrieving more data from paged data sets
      additionalProperties: false
    Point:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        "@id":
          type: string
          format: uri
        "@type":
          enum:
            - wx:Point
          type: string
        cwa:
          $ref: "#/components/schemas/NWSForecastOfficeId"
        forecastOffice:
          type: string
          format: uri
        gridId:
          $ref: "#/components/schemas/NWSForecastOfficeId"
        gridX:
          minimum: 0
          type: integer
        gridY:
          minimum: 0
          type: integer
        forecast:
          type: string
          format: uri
        forecastHourly:
          type: string
          format: uri
        forecastGridData:
          type: string
          format: uri
        observationStations:
          type: string
          format: uri
        relativeLocation:
          oneOf:
            - $ref: "#/components/schemas/RelativeLocationGeoJson"
            - $ref: "#/components/schemas/RelativeLocationJsonLd"
        forecastZone:
          type: string
          format: uri
        county:
          type: string
          format: uri
        fireWeatherZone:
          type: string
          format: uri
        timeZone:
          type: string
        radarStation:
          type: string
    PointGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/Point"
    PointJsonLd:
      allOf:
        - $ref: "#/components/schemas/Point"
        - required:
            - "@context"
            - geometry
          type: object
          properties:
            "@context":
              $ref: "#/components/schemas/JsonLdContext"
            geometry:
              $ref: "#/components/schemas/GeometryString"
    PointString:
      pattern: ^(-?\d+(?:\.\d+)?),(-?\d+(?:\.\d+)?)$
      type: string
    ProblemDetail:
      required:
        - type
        - title
        - status
        - detail
        - instance
        - correlationId
      type: object
      properties:
        type:
          type: string
          description: A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is not necessarily a resolvable URL.
          format: uri
          default: about:blank
          example: urn:noaa:nws:api:UnexpectedProblem
        title:
          type: string
          description: A short, human-readable summary of the problem type.
          example: Unexpected Problem
        status:
          maximum: 999
          minimum: 100
          type: number
          description: The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence of the problem.
          example: 500
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: An unexpected problem has occurred.
        instance:
          type: string
          description: A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only an identifier and is not necessarily a resolvable URL.
          format: uri
          example: urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63
        correlationId:
          type: string
          description: A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
          example: 493c3a1d-f87e-407f-ae2c-24483f5aab63
      description: Detail about an error. This document conforms to RFC 7807 (Problem Details for HTTP APIs).
      additionalProperties: true
    QuantitativeValue:
      type: object
      properties:
        value:
          type: number
          nullable: true
          description: A measured value
        maxValue:
          type: number
          description: The maximum value of a range of measured values
        minValue:
          type: number
          description: The minimum value of a range of measured values
        unitCode:
          $ref: "#/components/schemas/UnitOfMeasure"
        qualityControl:
          enum:
            - Z
            - C
            - S
            - V
            - X
            - Q
            - G
            - B
            - T
          type: string
          description: For values in observation records, the quality control flag from the MADIS system. The definitions of these flags can be found at https://madis.ncep.noaa.gov/madis_sfc_qc_notes.shtml
      description: A structured value representing a measurement and its unit of measure. This object is a slighly modified version of the schema.org definition at https://schema.org/QuantitativeValue
      additionalProperties: false
    RegionCode:
      oneOf:
        - $ref: "#/components/schemas/LandRegionCode"
        - $ref: "#/components/schemas/MarineRegionCode"
    RelativeLocation:
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        distance:
          $ref: "#/components/schemas/QuantitativeValue"
        bearing:
          $ref: "#/components/schemas/QuantitativeValue"
    RelativeLocationGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/RelativeLocation"
    RelativeLocationJsonLd:
      allOf:
        - $ref: "#/components/schemas/RelativeLocation"
        - required:
            - geometry
          type: object
          properties:
            geometry:
              $ref: "#/components/schemas/GeometryString"
    Sigmet:
      type: object
      properties:
        id:
          type: string
          format: uri
        issueTime:
          type: string
          format: date-time
        fir:
          type: string
          nullable: true
        atsu:
          $ref: "#/components/schemas/ATSUIdentifier"
        sequence:
          type: string
          nullable: true
        phenomenon:
          type: string
          nullable: true
          format: uri
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      additionalProperties: false
    SigmetCollectionGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                $ref: "#/components/schemas/SigmetGeoJson"
    SigmetGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/Sigmet"
    SigmetSequenceNumber:
      type: string
      example: "29W"
    StateTerritoryCode:
      enum:
        - AL
        - AK
        - AS
        - AR
        - AZ
        - CA
        - CO
        - CT
        - DE
        - DC
        - FL
        - GA
        - GU
        - HI
        - ID
        - IL
        - IN
        - IA
        - KS
        - KY
        - LA
        - ME
        - MD
        - MA
        - MI
        - MN
        - MS
        - MO
        - MT
        - NE
        - NV
        - NH
        - NJ
        - NM
        - NY
        - NC
        - ND
        - OH
        - OK
        - OR
        - PA
        - PR
        - RI
        - SC
        - SD
        - TN
        - TX
        - UT
        - VT
        - VI
        - VA
        - WA
        - WV
        - WI
        - WY
        - MP
        - PW
        - FM
        - MH
      type: string
      example: CA
    TextProduct:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@id":
          type: string
          format: uri
        id:
          type: string
        wmoCollectiveId:
          type: string
        issuingOffice:
          type: string
        issuanceTime:
          type: string
          format: date-time
        productCode:
          type: string
        productName:
          type: string
        productText:
          type: string
      additionalProperties: false
    TextProductCollection:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@graph":
          type: array
          items:
            $ref: "#/components/schemas/TextProduct"
      additionalProperties: false
    TextProductTypeCollection:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@graph":
          type: array
          items:
            required:
              - productCode
              - productName
            type: object
            properties:
              productCode:
                type: string
              productName:
                type: string
            additionalProperties: false
      additionalProperties: false
    TextProductLocationCollection:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        locations:
          type: object
          additionalProperties:
            type: string
            nullable: true
      additionalProperties: false
    Time:
      pattern: ^([01][0-9]|2[0-3])[0-5][0-9]$
      type: string
      description: A time (in HHMM format). This is always specified in UTC (Zulu) time.
      example: "0419"
    UnitOfMeasure:
      pattern: ^((wmo|uc|wmoUnit|nwsUnit):)?.*$
      type: string
      description: |
        A string denoting a unit of measure, expressed in the format "{unit}" or "{namespace}:{unit}". Units with the namespace "wmo" or "wmoUnit" are defined in the World Meteorological Organization Codes Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to http://codes.wmo.int/common/unit/{unit}. Units with the namespace "nwsUnit" are currently custom and do not align to any standard. Units with no namespace or the namespace "uc" are compliant with the Unified Code for Units of Measure syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO/DIS 19156). Namespaced units are considered deprecated. We will be aligning API to use the same standards as GML/IWXXM in the future.
    Zone:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        "@id":
          type: string
          format: uri
        "@type":
          enum:
            - wx:Zone
          type: string
        id:
          $ref: "#/components/schemas/NWSZoneID"
        type:
          $ref: "#/components/schemas/NWSZoneType"
        name:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        state:
          oneOf:
            - $ref: "#/components/schemas/StateTerritoryCode"
            - type: string
              enum:
                - ""
                - null
              nullable: true
        forecastOffice:
          type: string
          format: uri
        gridIdentifier:
          type: string
        awipsLocationIdentifier:
          type: string
        cwa:
          type: array
          items:
            $ref: "#/components/schemas/NWSForecastOfficeId"
          deprecated: true
        forecastOffices:
          type: array
          items:
            type: string
            format: uri
          deprecated: true
        timeZone:
          type: array
          items:
            type: string
            format: iana-time-zone-identifier
        observationStations:
          type: array
          items:
            type: string
            format: uri
        radarStation:
          type: string
          nullable: true
      additionalProperties: false
    ZoneGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/Zone"
    ZoneJsonLd:
      $ref: "#/components/schemas/Zone"
    ZoneCollectionGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                type: object
                properties:
                  properties:
                    $ref: "#/components/schemas/Zone"
    ZoneCollectionJsonLd:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        "@graph":
          type: array
          items:
            $ref: "#/components/schemas/Zone"
      additionalProperties: false
    ZoneForecast:
      type: object
      properties:
        "@context":
          $ref: "#/components/schemas/JsonLdContext"
        geometry:
          $ref: "#/components/schemas/GeometryString"
        zone:
          type: string
          description: An API link to the zone this forecast is for.
          format: uri
        updated:
          type: string
          description: The time this zone forecast product was published.
          format: date-time
        periods:
          type: array
          items:
            required:
              - number
              - name
              - detailedForecast
            type: object
            properties:
              number:
                type: integer
                description: A sequential identifier number.
              name:
                type: string
                description: A textual description of the period.
                example: This Afternoon
              detailedForecast:
                type: string
                description: A detailed textual forecast for the period.
            additionalProperties: false
          description: An array of forecast periods.
      description: An object representing a zone area forecast.
      additionalProperties: false
    ZoneForecastGeoJson:
      allOf:
        - $ref: "#/components/schemas/GeoJsonFeature"
        - type: object
          properties:
            properties:
              $ref: "#/components/schemas/ZoneForecast"
    ZoneForecastJsonLd:
      $ref: "#/components/schemas/ZoneForecast"
  responses:
    AlertsActiveCount:
      description: A data structure showing the counts of active alerts broken down by various categories
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/AlertsActiveCount"
    AlertsTypes:
      description: A list of recognized event types
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/AlertsTypes"
    Glossary:
      description: A set of glossary terms
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/Glossary"
    AlertCollection:
      description: A collection of alerts.
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/geo+json:
          schema:
            $ref: "#/components/schemas/AlertCollectionGeoJson"
        application/ld+json:
          schema:
            $ref: "#/components/schemas/AlertCollectionJsonLd"
      x-url-content-negotiation-extensions:
        json: application/geo+json
    ClientError:
      description: A client error (4XX)
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"
    GridpointForecast:
      description: A forecast for a gridpoint.
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/geo+json:
          schema:
            $ref: "#/components/schemas/GridpointForecastGeoJson"
        application/ld+json:
          schema:
            $ref: "#/components/schemas/GridpointForecastJsonLd"
        application/vnd.noaa.dwml+xml:
          schema: {}
    Observation:
      description: An observation record.
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/geo+json:
          schema:
            $ref: "#/components/schemas/ObservationGeoJson"
        application/ld+json:
          schema:
            $ref: "#/components/schemas/ObservationJsonLd"
        application/vnd.noaa.uswx+xml:
          schema: {}
        application/vnd.noaa.obs+xml:
          schema: {}
    ObservationCollection:
      description: A collection of observation records.
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/geo+json:
          schema:
            $ref: "#/components/schemas/ObservationCollectionGeoJson"
        application/ld+json:
          schema:
            $ref: "#/components/schemas/ObservationCollectionJsonLd"
    ObservationStationCollection:
      description: A collection of observation stations.
      headers:
        X-Correlation-Id:
          $ref: "#/components/headers/CorrelationId"
        X-Request-Id:
          $ref: "#/components/headers/RequestId"
        X-Server-Id:
          $ref: "#/components/headers/ServerId"
      content:
        application/geo+json:
          schema:
            $ref: "#/components/schemas/ObservationStationCollectionGeoJson"
        application/ld+json:
          schema:
            $ref: "#/components/schemas/ObservationStationCollectionJsonLd"
    Redirect:
      description: This endpoint may redirect to a more specific resource.
      headers:
        Location:
          description: The URL to which the client is redirected.
          schema:
            type: string
            format: uri
  parameters:
    AlertArea:
      name: area
      in: query
      description: "State/territory code or marine area code This parameter is incompatible with the following parameters: point, region, region_type, zone"
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/AreaCode"
    AlertCertainty:
      name: certainty
      in: query
      description: Certainty (observed, likely, possible, unlikely, unknown)
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/AlertCertainty"
    AlertCode:
      name: code
      in: query
      description: Event code
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: ^\w{3}$
          type: string
    AlertEventName:
      name: event
      in: query
      description: Event name
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: ^[A-Za-z0-9 ]+$
          type: string
    AlertMessageType:
      name: message_type
      in: query
      description: Message type (alert, update, cancel)
      style: form
      explode: false
      schema:
        type: array
        items:
          enum:
            - alert
            - update
            - cancel
          type: string
    AlertPoint:
      name: point
      in: query
      description: "Point (latitude,longitude) This parameter is incompatible with the following parameters: area, region, region_type, zone"
      schema:
        $ref: "#/components/schemas/PointString"
    AlertRegion:
      name: region
      in: query
      description: "Marine region code This parameter is incompatible with the following parameters: area, point, region_type, zone"
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/MarineRegionCode"
    AlertRegionType:
      name: region_type
      in: query
      description: "Region type (land or marine) This parameter is incompatible with the following parameters: area, point, region, zone"
      schema:
        enum:
          - land
          - marine
        type: string
    AlertSeverity:
      name: severity
      in: query
      description: Severity (extreme, severe, moderate, minor, unknown)
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/AlertSeverity"
    AlertStatus:
      name: status
      in: query
      description: Status (actual, exercise, system, test, draft)
      style: form
      explode: false
      schema:
        type: array
        items:
          enum:
            - actual
            - exercise
            - system
            - test
            - draft
          type: string
    AlertUrgency:
      name: urgency
      in: query
      description: Urgency (immediate, expected, future, past, unknown)
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/AlertUrgency"
    AlertZone:
      name: zone
      in: query
      description: "Zone ID (forecast or county) This parameter is incompatible with the following parameters: area, point, region, region_type"
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/NWSZoneID"
    ATSUIdentifier:
      name: atsu
      in: path
      description: ATSU identifier
      required: true
      schema:
        $ref: "#/components/schemas/ATSUIdentifier"
    Date:
      name: date
      in: path
      description: Date (YYYY-MM-DD format)
      required: true
      schema:
        $ref: "#/components/schemas/Date"
    GridpointForecastFeatureFlags:
      name: Feature-Flags
      in: header
      description: |
        Enable future and experimental features (see documentation for more info): * forecast_temperature_qv: Represent temperature as QuantitativeValue * forecast_wind_speed_qv: Represent wind speed as QuantitativeValue
      required: false
      style: simple
      explode: false
      schema:
        type: array
        items:
          enum:
            - forecast_temperature_qv
            - forecast_wind_speed_qv
          type: string
    GridpointForecastUnits:
      name: units
      in: query
      description: Use US customary or SI (metric) units in textual output
      schema:
        $ref: "#/components/schemas/GridpointForecastUnits"
    GridpointWFO:
      name: wfo
      in: path
      description: Forecast office ID
      required: true
      schema:
        $ref: "#/components/schemas/NWSForecastOfficeId"
    Gridpoint:
      name: gridpoint
      in: path
      description: Forecast gridpoint pair(see https://weather-gov.github.io/api/gridpoints for more info)
      required: true
      schema:
        type: string
        pattern: ^\d{1,2},\d{1,2}$
    Limit:
      name: limit
      in: query
      description: Limit
      schema:
        maximum: 500
        minimum: 1
        type: integer
        default: 500
    LimitFull:
      name: limit
      in: query
      description: Limit
      schema:
        minimum: 1
        type: integer
    NWSCenterWeatherServiceUnitId:
      name: cwsuId
      in: path
      description: NWS CWSU ID
      required: true
      schema:
        $ref: "#/components/schemas/NWSCenterWeatherServiceUnitId"
    NWSOfficeId:
      name: officeId
      in: path
      description: NWS office ID
      required: true
      schema:
        $ref: "#/components/schemas/NWSOfficeId"
    NWSZoneId:
      name: zoneId
      in: path
      description: NWS public zone/county identifier
      required: true
      schema:
        $ref: "#/components/schemas/NWSZoneID"
    ObservationStationId:
      name: stationId
      in: path
      description: Observation station ID
      required: true
      schema:
        type: string
      example: "KORD"
    PaginationCursor:
      name: cursor
      in: query
      description: Pagination cursor
      schema:
        type: string
    PathPoint:
      name: point
      in: path
      description: Point (latitude, longitude)
      required: true
      schema:
        $ref: "#/components/schemas/PointString"
    QueryIdArray:
      name: id
      in: query
      description: Filter by observation station ID
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    QueryStateArray:
      name: state
      in: query
      description: Filter by state/marine area code
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/AreaCode"
    QueryStationTypeArray:
      name: stationType
      in: query
      description: Limit results to a specific station type or types
      style: form
      explode: false
      schema:
        type: array
        items:
          pattern: ^[A-Za-z0-9-]+$
          type: string
    QueryReportingHost:
      name: reportingHost
      in: query
      description: Show records from specific reporting host
      schema:
        type: string
    QueryHost:
      name: host
      in: query
      description: Show latency info from specific LDM host
      schema:
        type: string
    QueryDate:
      name: date
      in: query
      description: Date (YYYY-MM-DD format)
      schema:
        $ref: "#/components/schemas/Date"
    QueryStartTime:
      name: start
      in: query
      description: Start time
      schema:
        $ref: "#/components/schemas/Time"
    QueryEndTime:
      name: end
      in: query
      description: End time
      schema:
        $ref: "#/components/schemas/Time"
    Time:
      name: time
      in: path
      description: Time (HHMM format). This time is always specified in UTC (Zulu) time.
      required: true
      schema:
        $ref: "#/components/schemas/Time"
  headers:
    CorrelationId:
      description: A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
      schema:
        type: string
    RequestId:
      description: A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
      schema:
        type: string
    ServerId:
      description: The identifier of the server that generated the response, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.
      schema:
        type: string
  securitySchemes:
    userAgent:
      type: apiKey
      description: We require that all consumers of the API include a User-Agent header in requests. This is due to a high number of scripts exhibiting abusive behavior (intentional or unintentional). We recommend setting the value to something that identifies your application and includes a contact email. This will help us contact you if we notice unusual behavior and also aid in troubleshooting issues. The API remains open and free to use and there are no limits imposed based on the User-Agent string. This mechanism will be replaced with a more typical API key system at a later date.
      name: User-Agent
      in: header
security:
  - userAgent: []
externalDocs:
  description: Full API documentation
  url: https://www.weather.gov/documentation/services-web-api
